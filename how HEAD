[33mcommit 9c4d2468446ce0b1f2a139e5420b1ac00b51905d[m[33m ([m[1;36mHEAD -> [m[1;32mdqn_2[m[33m)[m
Author: Anson Wong <ahtsans@gmail.com>
Date:   Tue Feb 5 15:44:06 2019 -0800

    Some progress

[33mcommit ee4e21a33048effae41eb1a60fc6ce7133d9685f[m
Author: tsan <ahtsans@gmail.com>
Date:   Wed Dec 19 12:45:34 2018 -0800

    DQN

[33mcommit b9147bc43268152f1948fa5cef22db75b115e1f4[m[33m ([m[1;31morigin/epsilon_greedy[m[33m, [m[1;32mepsilon_greedy[m[33m)[m
Author: tsan <ahtsans@gmail.com>
Date:   Fri Jan 18 16:25:40 2019 -0800

    Remove unnecessary argument

[33mcommit bb2cee185e8cef2c4ad72fbf8cb3f3b2a50d54d4[m
Author: tsan <ahtsans@gmail.com>
Date:   Thu Jan 17 21:00:59 2019 -0800

    Modify QFunction

[33mcommit 5e16e1f002a953e460d8abee10f10fecf4685a7a[m
Author: tsan <ahtsans@gmail.com>
Date:   Wed Jan 9 14:58:12 2019 -0800

    Remove API changes

[33mcommit 118cb0f8b9e585e77e714dc2f02dae13494b3752[m
Author: tsan <ahtsans@gmail.com>
Date:   Sun Jan 6 20:15:27 2019 -0800

    Fix tests and add docstrings

[33mcommit 117675b7aac6dce0a53a59d7cfa890a109da914b[m
Author: tsan <ahtsans@gmail.com>
Date:   Thu Jan 3 23:34:28 2019 -0800

    Separate into policy and exploration strategy

    * Added test for qf_derived_policy and epsilon_greedy_policy
    * Refactor policy and exploration strategy API

[33mcommit 2ad118635a8063532f3d8c618d7779e56ee6a555[m
Author: tsan <ahtsans@gmail.com>
Date:   Wed Jan 2 23:14:17 2019 -0800

    Epsilon greedy policy

[33mcommit 582c3c56ffc3b60f0b371c77aec170a6b7aa7210[m
Author: Anson Wong <ahtsans@gmail.com>
Date:   Wed Jan 16 19:16:21 2019 -0800

    Support numpy.uint8 in some classes (#455)

    - Support numpy.uint8 in some classes
    - Grayscale should only work on np.uint8.
    - garage.spaces.Box should have dtype np.float32 by default.
    - Use dummyEnv for unit test.

[33mcommit afbeee84a6b1f06e32f804c58958d70fd557983a[m
Author: Gautam Salhotra <gautams3@users.noreply.github.com>
Date:   Tue Jan 15 10:16:58 2019 -0800

    Updates to RandomizedEnv unit tests (#450)

    * Tests for ABSOLUTE and COEFFICIENT methods
    * Tests include assertions on values, instead
    of just checks to see if env.step() works
    * No longer writing modified mujoco model to xml on disk
    (Passing xml directly to mujoco)
    * Updated string formatting for python 3.5 compatibility
    * Mocking randomization of mujoco models for unit tests

    * Styling changes
    * Create common setUp() test method to
    create your environment before randomizing

[33mcommit 77714c38d5b575a5cfd6d1e42f0a045eebbe3484[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Tue Jan 8 13:37:08 2019 -0800

    Add vanilla loss to NPO (#447)

    1. VPG uses a different loss function than NPO and its variants. VPG
    uses the vanilla loss, as VPG uses direct gradient estimator from policy
    score function, NPO calculates the derivation using importance sampling.
    Thus, we need to add the 'real' vanilla loss to NPO to inherit from NPO.
    The Enum is kept in this commit instead of string.
    2. Update examples.

[33mcommit 241ae5c02f17e6fb4c6ec59b35454fe4b3dd1c23[m
Author: CatherineSue <changsu.cs.work@gmail.com>
Date:   Tue Dec 18 12:08:48 2018 -0800

    Add tf/TNPG

    1. Add TNPG to TF. TNPG is NPO with ConjucateGradientOptimizer.
    2. Add example and test.

[33mcommit 33349d9d41c0a8516291cdd60c96f2b4e14e89f5[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Thu Dec 20 17:23:05 2018 -0800

    Conditionally import lasagne or tf to set the seed

    When launching experiments with run_experiment the function set_seed is
    in charge of setting the random seed across the different packages used
    in garage. However, we should keep from import theano when only using
    tensorflow and vice versa.
    To detect if theano and/or tensorflow are being used, we check if they
    appear in the list of packages already imported.

[33mcommit 64337d70cff695807940382982ef858b00bf8b78[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Thu Dec 20 09:37:51 2018 -0800

    Add tf/ERWR (#441)

    1. Add tf/ERWR.
    2. Fix warning in garage.baselines.LinearFeatureBaseline.
    3. Set seed in TfGraphTestCase to avoid large flakiness.

[33mcommit a45e595fcf6254a7c9e0c73e2e9b145488d7da02[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Wed Dec 19 13:04:21 2018 -0800

    Add git-ignored files in flake8 excluded files

    Since now flake8 runs locally before pushing a commit remotely, it may
    throw errors for ignored files. This commit fixes that by adding all the
    files in .gitignore in all the lists of excluded files inside the script
    check_flake8.

[33mcommit 9f24dafb903eeb3c38461214873f2194be22ca28[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Tue Dec 18 15:12:16 2018 -0800

    Move KNOWN_GYM_NOT_CLOSE_VIEWER to envs base

    Since tests is one step above garage.envs in the directory hierarchy,
    the class GarageEnv cannot be correctly imported when running code from
    inside the garage folder.
    This dependency is removed by moving the list KNOWN_GYM_NOT_CLOSE_VIEWER
    which is the only dependency from garage/envs/base in tests/quirks.

[33mcommit acb83f2858de1ee7f6f7abd90840dee4a314740c[m
Author: Anson Wong <ahtsans@gmail.com>
Date:   Tue Dec 18 01:00:09 2018 -0800

    Added gym.Env wrappers and tests (#414)

    This PR added gym.Env wrappers for resize, grayscale, repeat_action and stack_frames. They are usually used for pixel environments.

[33mcommit a72b5e0010e0573501d837fd334b103b2efbf6ea[m
Author: Keren Zhu <naeioi@hotmail.com>
Date:   Thu Dec 13 16:08:51 2018 -0800

    Add flake8 and imports check to pre-commit (#422)

    They are previously checked in travis but NOT checked locally. As a result, contributors might devote extra effort to fix their code after finding out they are failing in travis' tests.

    changlog

    * Remove check-imports.sh and check-flake8.sh scripts from .travis.yml.
    * Check flake8 by check-flake8.sh and imports by pylint rule F401 in pre-commit.
    * Trigger pylint by pre-commit system hook. (bultin pre-commit hook runs in isolated env and does not support dynamic import check).
    * Setup system-wide environment variables in docker-entrypoint.sh (previously in check-import.sh but now removed).

[33mcommit 490da35ed741cbf0cc24969a603a396b63cfb392[m
Author: Anson Wong <ahtsans@gmail.com>
Date:   Thu Dec 13 07:43:53 2018 +0800

    Added CNN implementation and unit tests (#413)

[33mcommit 56cc4a65d956a5c51c73005066dcc04f3ed1b003[m
Author: Anson Wong <ahtsans@gmail.com>
Date:   Fri Dec 7 17:55:02 2018 -0800

    Ignore D107 in setup.cfg and flake8 (#425)

[33mcommit b3b945f71d04d639751149ee24ff525d0fb2bfe3[m
Author: Keren Zhu <naeioi@hotmail.com>
Date:   Thu Dec 6 16:20:19 2018 -0800

    Decouple tensorboard from logger (#419)

    - Logger related files are now moved to `garage.misc.logger`
    - Tensorboard logging is now optional by setting `LOG_TENSORBOARD` in config.py
    - New API: `logger.reset()`
      When tensorboard in enabled, `reset()` rebuild the temporary tensor stored in tensorflow graph used for logging
      No effect when tensorboard is disable.

[33mcommit 13befaccbf868c7ef877c2d2ac69ca6e9a111451[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Thu Dec 6 14:05:12 2018 -0800

    Fix bugs in tf/VPG (#418)

    1. Fix typo in pg_loss.
    2. The default batch_size of the optimizer in VPG should be None.
    3. The default max_epochs of the optimizer in VPG should be 1.

[33mcommit 1600f7049d99e3470b26531c45b814e492bc1633[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Wed Dec 5 12:12:51 2018 -0800

    Bug fixes for importing Box (#426)

    Fix gym.spaces import errors

    ref: #420

[33mcommit d5e350bd1fe7115cb6073ce0f893e670d421f035[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Tue Nov 27 13:46:17 2018 -0500

    Move garage.misc.instrument to garage.experiment (#386)

    * Move garage.misc.instrument to garage.experiment
    * Minor PEP8 re-formatting

[33mcommit 6837bca1d7cdfbe5707ac3952e35eb9497915e81[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Mon Nov 19 14:39:44 2018 -0800

    Fix bug in test_benchmark_her (#415)

    Add missing parameter in test_benchmark_her.
    Remove redundant subfolder in test_benchmark_ddpg.

[33mcommit 6a26bb824b021fa09a0a36f350731ceca4ab8d56[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Fri Nov 2 21:45:27 2018 -0500

    Default-enable all rules in flake8 checks (#384)

    This PR changes the flake8 CI script to enable all rules by default.
    All disabled rules are explicitly specified, making it easier to
    inspect which rules are don't comply with yet.

[33mcommit 74eec28f8747a96471f6c069c256a7655691a27d[m
Author: Zhanpeng He <31218416+zhanpenghe@users.noreply.github.com>
Date:   Thu Nov 1 18:27:59 2018 -0700

    Add parameter without layers library (#378)

    This implements similar function as `garage.tf.core.layers.ParamLayer` but without garage layers library. This function will create variables of length `length` and broadcast it to the shape of `input_var.shape[:-1] + [length, ]`.

[33mcommit 824be80b95cff69b39cf350eb0f4a59f09df23a8[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Thu Nov 1 17:24:16 2018 -0700

    Update CODEOWNERS

[33mcommit 564e4c20e339cb2ecbcda1871afe926eef91aba2[m[33m ([m[1;33mtag: v2018.10.0[m[33m, [m[1;32mremove_tensor_utils[m[33m)[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Wed Oct 31 10:33:28 2018 -0700

    Kill stub with fire (#376)

[33mcommit b4b8128f65b53921005cbc00fb87210d483f4506[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Wed Oct 31 09:50:05 2018 -0700

    Add CHANGELOG.md for 2018.10 (#369)

    This change log contains all relevant changes in garage from the commit
    tagged as release 0.0.1 down to the commit with SHA1 b3a28992.

[33mcommit 38267e986b666f393c946a301305feacb2833d8e[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Wed Oct 31 01:42:44 2018 -0700

    Update GCC to avoid build errors (#370)

    In OSX 10.14 there are build errors for dm-control due to gcc 7 which
    invalidates the installation of the conda environment for garage. This
    is solved by upgrading to the latest version of gcc, and it was tested
    in both OSX 10.12 and 10.14.

[33mcommit b3b6286b3a79e526e25e475c5fa42914e550f25e[m
Author: ahtsan <ahtsans@gmail.com>
Date:   Tue Oct 30 17:04:54 2018 -0700

    Implement MLP function  (#341)

    - Include docstring
    - Layer normalization instead of weight normalization
    - Inherit reuse flag from parent scope
    - Add test for layer normalization

[33mcommit 26c14a3e943e219b9202ceaacc72b6caffe2b8c8[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Tue Oct 30 15:44:55 2018 -0700

    Fix policy entropy (#368)

    This commit fixes policy entropy. Currently it uses the following three
    options:
    • maximum entropy (augmented reward)
    • with a logli estimator (-logli(action|policy)
    • with the gradient turned off (tf.stop_gradient(entropy))

[33mcommit e89ce7ae9ba99a109da9ee58cca9f464988ce62f[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Tue Oct 30 14:17:48 2018 -0700

    Disable flaky tests (#373)

    Disable SIGINT test so the CI can pass consistently.

[33mcommit 53c06edc70a8b870e7108b10092bdcd8baf59ffd[m
Author: Keren Zhu <naeioi@hotmail.com>
Date:   Tue Oct 30 12:30:33 2018 -0700

    Fix TensorFlow warning in NPO about IndexedSlices (#375)

    NPO uses a boolean valid_var tensor to select a slice from a variety
    of tensors related to action, policy and advantages. Previously we
    used tf.boolean_mask() to do the selection, which internally calls
    tf.gather() that emits tf.IndexedSlices. When calculating BP,
    tf.IndexedSlices will be casted into a dense tf.Tensor with a
    "Converting sparse IndexedSlices to a dense Tensor of unknown shape"
    warning. This fix replaces tf.boolean_mask() with
    tf.dynamic_partition(), which don't have such problem.

    This difference of behavior is not documented in Tensorflow. It is
    not clear if tf.dynamic_partition() will cause performance
    regression.

    This fixes #289.

[33mcommit 2a16a36fabb68c18e86c7bbc016106ed8e358934[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Mon Oct 29 15:47:33 2018 -0700

    Rename OS X to macOS (#372)

    Per Apple's nomenclature, macOS replaces OS X as the default term for
    their operating system.

[33mcommit d71df9ed43188bb47da984d9636eed079d029f05[m
Author: Peter Lillian <plillian@usc.edu>
Date:   Mon Oct 29 14:00:08 2018 -0700

    Setup scripts now check directory (#348)

    * Setup scripts now check directory

    * Supressed messages for missing setup.py

    * Simplified + clarified directory errors

    * Changed error message

    * Remove subshell style

    * Unmodified Autogenerated code

    * Replaced test with brackets

    * Fixed broken line

    * Added subshell for grep

[33mcommit 446aa8cd8bebed3e1a2ca513f1cf30cee190f570[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Fri Oct 26 17:34:06 2018 -0700

    Copy MuJoCo key before installing the conda env

    Currently the dm-control installation calls the MuJoCo package during
    its installation, and since no MuJoCo key is present, there's an error
    during the installation.

[33mcommit 828f6ad50b17b39d267ff9a7a3ba204aff46f935[m
Author: Utkarsh Patel <utkarshjp7@gmail.com>
Date:   Fri Oct 26 11:12:33 2018 -0700

    Remove Sawyer Files (#352)

    * Removed sawyer envs

    * Removed sawyer ros files

[33mcommit df640a51f8e28bcea5f625d26f139c4182b4d7df[m
Author: Gautam Salhotra <gautams3@users.noreply.github.com>
Date:   Wed Oct 24 21:20:12 2018 -0700

    Fixing VERIFIED_OSX_VERSIONS (#357)

[33mcommit 085a35d0ca17773871fd0d9415a3797c9c3f360e[m
Author: Keren Zhu <naeioi@hotmail.com>
Date:   Wed Oct 24 17:29:23 2018 -0700

    Fix broken Box2D dependency in fresh install (#335)

    * Fix Box2D in fresh install (#334)

    Before box2d-py 2.3.4, box2d-py works on Linux but breaks on OSX, and
    Box2D-kengz works on OSX but breaks on Linux. box2d-py 2.3.4 fixes issue
    on OSX and now works on both platforms, and is actively by OpenAI.

    See https://github.com/openai/gym/pull/1120.

    * Cleanup (#334)

    * Cleanup extra pip (#334)

    Remove pip box2d-py in
    - setup_linux.sh
    - setup_osx.sh
    - Dockerfile.ci

    * Upgrade gym to 0.10.8 (#334)

    * Remove assertion for Mujoco viewer close

    This problem is resolved in #340

    * Close all env

    * Remove deadcode KNOWN_GYM_CLOSE_BROKEN

[33mcommit a99483c39cd2e7d11b8dad98c5dd09520ac2e5d3[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Wed Oct 24 16:53:01 2018 -0700

    Change replay buffer initialization (#356)

    This commit changes replay buffer initialization in a more proper way.
    Formerly, replay buffer initialized the shape of each key in the
    transition by getting the flat_dim of env_spec.*_space. This works for
    Box and Dict spaces. But it has two flaws:
    1. It only considers when observation is Dict space. But doesn't deal
    with the situation when action or other key has Dict space.
    2. If action_space is Discrete(3), the ReplayBuffer._buffer["action"]
    will have a shape of (size, time_horizon, 3). However, the actual value
    of action is of shape (1). So that causes a serious error.

    Based on the above disadvantages, a better idea would be initialize the
    buffer shape by sampling. Like when adding a real transition to the
    buffer. Or use env.sample(). I used the former one. Because when trying
    the latter option, the Box.sample() causes an invalid range error. To
    solve this we may need to creat an Box space instance and then use
    sample(). It is not proper to do this in a construcing process in replay
    buffer. Thus, I initialize the shape of each key in buffer when adding a
    real transition. This has an advantage is that we may add info into the
    buffer for GoalEnv.compute_reward().

    Also, the update plotter line in ddpg were in wrong position. Fixed it.

[33mcommit 4169a649b47c8d75b526333e55b27b933a4c0ea7[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Wed Oct 24 13:37:04 2018 -0700

    Remove inter-package convenience imports (#349)

    Removed all imports in init.py that are not strictly convenience.
    Example of a convenience import is from `garage.x.x import x`.

[33mcommit 7396eddab0151f368ad9d98eeed7c07868d67f47[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Wed Oct 24 09:46:29 2018 -0700

    Remove side effects from step() in policies (#350)

    Ensures the environment does not add side effects to the action,
    affecting the optimizer.

    * Check whether the environments edit the action by adding unit
    tests for each environment.
    * For the environments that do edit the action in their step() function,
    made sure the action was first copied within the environment.

[33mcommit ab7112459ea29a5abd99f876451ece67842b1e5d[m
Author: Keren Zhu <naeioi@hotmail.com>
Date:   Tue Oct 23 15:35:26 2018 -0700

    Theano gpu support (#351)

    * Replace --tf-gpu with --gpu, to enable GPU support for both Tensorflow and Theano.

    * Install pygpu needed by theano GPU support.

    * Update documentation on GPU support.

[33mcommit 4c530f06f830929592814801a37082452f03a32e[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Sun Oct 21 15:02:59 2018 -0700

    Update Dockerfile.ci for new mujoco_py install (#353)

    mujoco_py changed their setup.py to build the native bindings during
    install, rather than during first import. This affects when we need to
    make mjkey.txt available to the Dockferfile, and also means we don't
    need to trigger the build manually by importing mujoco_py within the
    Dockerfile.

[33mcommit dfba4206c8d938d41a592e9fd8ce1f16f4aab1c6[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Thu Oct 18 15:16:49 2018 -0700

    Fix VPG and DDPG to use VectorizedSampler (#329)

    * Fix VPG and DDPG to use VectorizedSampler

     - Rename the current VectorizedSampler to OnPolicyVectorizedSampler
    since it's more customized for on policy algorithms.
     - Write an OffPolicyVectorizedSampler for off polocy optimization
    algorithms.
     - Merge HerReplayBuffer and ReplayBuffer into same interface.
     - Fix VPG to use OnPolicyPolopt.

    * Add miscellaneous changes

     - Make the replay buffer base class garage.replay_buffer.ReplayBuffer
    abstract. Rename the regular replay buffer to SimpleReplayBuffer.
     - Delete enums and pass ReplayBuffer class into algorithm. Now use can
    construct a replay buffer by their own.
     - Move `configure_dims` and `dims_to_shapes` into replay buffer
    constructor. Delete `env.reset()` in configure_dims. Notice the reason
    that we need to use `env.step()` because it's the only way to get
    env_info in gym.GoalEnv. And the env_info is used to compute reward in
    `env.compute_reward`. But the source code in gym shows that the env_info
    is not actually used when computing reward. So we can not store info in
    transitions.
     - Set default value for optimizer params in DDPG.
     - Remove commented code.
     - Redesign OffPolicyBatchPolopt. The BatchPolopt is more compatible for
    on policy algorithms. In last commit, OffPolicyBatchPolopt inherits from
    it. But actually off policy algorithms usually samples from experience
    replay instead of batch samples optimization. So it sounds like an
    unusual name. So rename it to OffPolicyAlgorithm and inherits from
    garage.algos.RLAlgorithm. Also, the training process in
    OffPolicyBatchPolopt is more specific for DDPG. Before design a sound
    training process function, I move the training function into DDPG.

[33mcommit 45e9915ad18a41695bad5f87bf645f5ecdef31df[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Wed Oct 17 18:08:35 2018 -0700

    Update LICENSE

[33mcommit e7d26687ef676137488760949f58b6c778b01e4a[m
Author: nae.ikari <naeioi@hotmail.com>
Date:   Tue Oct 16 21:59:49 2018 -0700

    Lock dm_control version (#344) (#345)

    dm_control is now updated to support Mujoco v2.00, and it breaks our
    current code. By default we install Mujoco v1.50 and this commit locks
    dm_control to the last version that supports Mujoco v1.50.

[33mcommit 1422fd79cf51835cbf2ca04187b586a56bf99a07[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Tue Oct 16 14:56:10 2018 -0700

    Import mujoco_py in GarageEnv only if necessary (#340)

    Currently the viewer window for MuJoCo environments is not closed
    correctly, leading to out of memory issues. This bug is on the side of
    the gym environments, but until gym provides a fix, we're closing the
    viewer window directly.
    However, by importing the mujoco_py package into the environment base of
    garage, this enforces the use of MuJoCo for all environments, which is
    not necessary for non-MuJoCo environments.
    That's why the import for the mjviewer was moved into the exception
    where the closing of the mjviewer is performed.

[33mcommit a3c336b095fe6cb41d1d6c79dcf3e76245df13ba[m
Author: Peter Lillian <plillian@usc.edu>
Date:   Mon Oct 15 14:18:34 2018 -0700

    Updated Docs so they mention that MuJoCo is required (#336)

    * Update installation.rst

[33mcommit 9ed0dd2c023e3991b03563a66ea9b809a0e302c3[m
Author: Peter Lillian <plillian@usc.edu>
Date:   Fri Oct 12 15:02:59 2018 -0700

    Less verbose timestamps (#337) (Fixes #212)

[33mcommit f3b5ec1d97485a2f164698574c205bccebae17ec[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Tue Oct 9 08:55:24 2018 -0700

    Rename ProductSpace to TupleSpace (#338)

    Rename all instances of ProductSpace to TupleSpace to keep garage
    consistent with OpenAI gym's naming convention of product spaces.

[33mcommit f798f1eac543bd7716c3a5a1d03b7d95e88da65f[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Mon Oct 8 22:06:01 2018 -0700

    Fix DmControl Tests (#299)

    * Added TestCase classes for TF and DmControl in `tests/fixtures.py`.
    * Replaced GarageTestCase with TfTestCase and TfGraphTestCase to
    reflect their specific usage for TF algorithms.
    * Added a parameterized test for every pickling and stepping through
    every single DmControl environment.
    * Added TF and Theano policy tests using a DmControl environment.

[33mcommit 58562192d12d7ee1068081e14509d74f96cfcdcc[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Mon Oct 8 14:47:16 2018 -0700

    Fix serialization of Gym Environments (#318)

    Add a round-trip pickling test for every Serializable object. This
    will help ensure that shallow picking bugs do not sneak into the
    codebase, which has been common recently. Conveniently, it also adds
    a tiny functionality test for many primitives.

    A boolean argument has been added to the check_tests script to run only
    tests for Cron Jobs in Travis CI. The "cron job" tests are filtered
    using the attrib plugin from nose2.

    Assign the field cron_job to True to those methods that had to be added
    to the cron job. For example:
    def test_long_task():
        # some time consuming function
        # ...
    test_long_task.cron_job = True

    The tests to verify all gym environments for the Theano and TensorFlow
    branch have been added to the Cron Job.

    For the serialization of objects in Garage, besides verifying no
    exception is thrown by serializing them, it's necessary to verify that
    their parameters can be fetched by un-serializing them.

    Also, the script check_tests.sh was restored and a separate script to
    test cron jobs was created instead.

    The helper method pickle_env_with_gym_quirks was merged into
    step_env_with_gym_quirks since they're almost doing the same thing, and
    the parameter serialize_env is used now to pickle/unpickle the
    environment.

    The method close_viewer_window was moved into GarageEnv class,
    so the viewer windows produced by MuJoCo get closed not only for tests.
    The file test_envs has been removed now that the most environments arte
    The mock modules for mujoco_py and mujoco_py.builder have been removed
    from check_imports.py to import the modules during the checking of
    imports.

    Finally, the test fixture in test_envs has been removed now that we have
    a proper environment test suite.

[33mcommit 6b01b73bca68f3d9dbbb313329c9a8e67902448d[m[33m ([m[1;31morigin/update-docs[m[33m)[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Tue Sep 25 15:10:22 2018 -0700

    Removed all remaining env.horizon calls (#328)

    Removed all remaining deprecated calls to env.horizon, replaced by env.spec.max_episode_steps.

[33mcommit d5b9e633295886d91a008c9280e555ff69e02c40[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Fri Sep 21 10:22:07 2018 -0700

    Fix sleeping processes (#295)

    The joblib package responsible of the MemmappingPool has been updated to
    consider any bugs that could produce the sleeping processes in the
    parallel sampler. Also the environment variable JOBLIB_START_METHOD has
    been removed since it's not implemented by joblib anymore.
    However, if run_experiment is interrupted during the optimization steps,
    the sleeping processes are still produced. To fix the problem, the child
    processes of the parallel sampler ignore SIGINT so they're not killed
    while holding a lock that is also acquired by the parent process,
    avoiding a dead lock.
    The process (thread in TF) used in Plotter is terminated thanks to
    registering the method shutdown with function atexit, but one important
    step missing was to clean the Queue that interacts with worker process.
    The class BatchPolopt has been re-made as InstrumentedBatchPolopt to
    notify the test of the different stages in the experiment life cycle so
    it can be interrupted with SIGINT.
    The test makes sure that the children processes are gone after
    the SIGINT is sent, or it throws an assertion error with those processes
    that didn't die.
    The context manager MasksSignals has been created to handle the
    masking of SIGINT in parallel_sampler.
    All plotters are appended to a static list, so they can be easily
    reachable from run_experiment to call shutdown on them.
    In order to check that all processes died after a time out, a loop to
    poll for alive processes was implemented.
    A warning message for processes that remain after shutdown is printed so
    users of garage can reopen the corresponding issue.
    A process known as semaphore tracker is spawned from the run_experiment
    process, but we cannot stop this process as it ignores SIGINT and
    SIGTERM and we haven't access to it. Therefore, it's removed from the
    list of children to wait for in both run_experiment and in test_sigint.
    Another process that is spawned from run_experiment is the Manager,
    which owns multiprocessing objects such as RLocks and counters used
    during the run_collect method in the StatefulPool class. This process
    was also making the warning message appear and the test fail.
    However, the manager has shutdown method to terminate the process, so we
    can verify the termination of the process.

[33mcommit de91deb0b3ed126e4f9a787791cbfb5124dc2319[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Sat Sep 15 01:16:30 2018 -0700

    Remove OcclussionEnv from convenience imports (#325)

    This avoids importing mujoco for non-mujoco tests.

[33mcommit 51e8cfc3c1b47d8e8d34fc7c108c6d746e44f509[m
Author: Gautam Salhotra <gautams3@users.noreply.github.com>
Date:   Mon Sep 10 15:14:27 2018 -0700

    Install fixes: CONDA_SH, garage packaging (#321)

    * Defining CONDA_SH for all installations (unconditionally)
    * Updated setup scripts to `pip install` garage as an editable package
    * Removed variables PYTHONPATH and PYTHON_ENV_VAR. Not needed after pip
    * Updated docs to remove mentions of PYTHONPATH
    * Bugfix in setup_linux.sh where we don't reinstall tensorflow
    * Added macOS 10.13.6 as verified version

[33mcommit 144d0fc4b6b004a0ba34f16e12eb93084c0a8c93[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Fri Sep 7 16:43:05 2018 -0700

    More travis fixes (#320)

    * Enabled and fixed all remaining CI tests
    * Added GarageTestCase that inherits from unittest.TestCase with overriding setUp and tearDown function calls

[33mcommit 0d373273116e97fb502ee5ecbff571fe0ed6f80b[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Mon Aug 27 13:06:50 2018 -0700

    Add code coverage measurement with codecov (#316)

[33mcommit 6978d73989fc185cdb97db0bc00c15148dbb0971[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Sun Aug 26 14:32:41 2018 -0700

    Remove all unused imports (#315)

    This PR removes all unused imports and adds an __all__ dunder to each
    package. Together these changes make the codebase compliant with flake8
    rule F401 (unused imports)

[33mcommit 5c946bcc6d02cfedf00ab59f027debef95da1a84[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Sun Aug 26 11:32:40 2018 -0700

    Remove cma_es_lib (#314)

    cma_es_lib.py is a copy of the pycma library available on PyPI (as
    package cma). This PR removes the vendored copy of pycma from the garage
    codebase and replaces it by installing pycma from pip instead.

[33mcommit 03b018798d941592d6467794c8dabfd1235eb48d[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Sat Aug 25 16:50:15 2018 -0700

    Remove Python 2-style class declarations (#313)

    This PR removes all Python 2 new-style class declarations.

    i.e. if a class from Python 2 was declared as
    ```python
    class Foo(object):
        pass
    ```
    in Python 3 it is sufficient to write
    ```python
    class Foo:
        pass
    ```

[33mcommit 05cb9af8a6fbda0f261d9a7ed22a67908f1abd62[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Sat Aug 25 16:03:18 2018 -0700

    Reorganize tests tree (#312)

    This PR reorganizes the test tree to prepare for future tests.

    The organization is as follows:
    - tests/           # all test code
      - garage/        # unit tests for modules. mirrors package tree.
      - fixtures/      # test fixtures -- code used to build good tests
      - benchmarks/    # benchmark tests

[33mcommit a3f6fe4e2cc030b0b58d9dd403ba9a04c04dce7f[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Wed Aug 22 11:29:59 2018 -0700

    Fix travis tests (#311)

    * 93 tests now run in Travis
    * Fixed previously broken but disabled tests

[33mcommit 471475866175d333cd92c7a519b5d0bbcf0c74da[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Mon Aug 20 15:51:42 2018 -0700

    Fix bug in tests/tf/policies (#310)

    Two problems cause the unittests fail.

    1) When running several tests at the same time, we should reset the tf
    computation graph, or use tf.Graph().as_default().
    2) The other problem locates in
    garage.misc.TensorBoardOutput.record_histogram. In a single test, we
    call algo.train() multiple times, but the
    TensorBoardOutput._histogram_summary_op didn't clear when we run a new
    policy. For now, I choose to initialize TensorBoardOutput on every test.

[33mcommit 079d8e547e8c5ac562f4c45d15b4a4de2937862e[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Mon Aug 20 15:02:28 2018 -0700

    Update setup script for OS X (#279)

    The script has been updated based on setup_linux.sh, using homebrew to
    install Linux packages and updating the requirements for mujoco-py, gym
    and baselines according to their documentation for OS X.
    Since mujoco-py is installed within the setup scripts for Linux and OS
    X, the script to setup mujoco has been removed.
    Also, the tensorflow package was added to environment.yml so it can be
    installed out of the box without the scripts. The feature to install the
    GPU flavor of TensorFlow may be removed from the Linux script once
    everything can be installed using environment.yml only, or another
    single list of dependencies.
    Also, bash primitives replaced readlink, using directories instead
    of suffixes with mktemp and fixing some output messages.
    Some of the fixes for OS X were applied to the Linux scrip as well.
    Finally, the default for set-envvar and the correct replacement of
    string in print error and warning functions have been added to the
    script to setup linux.

[33mcommit cf1fd3b9ba3116bcc6ec92ab7834e2557fdbdf78[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Mon Aug 20 12:56:16 2018 -0700

    Fix mujoco_py error in Dockerfile.ci (#308)

    The Dockerfile.ci build broke because mujoco_py could not find the
    LD_LIBRARY_PATH variable with mjpro150/bin in it. This change exports
    LD_LIBRARY_PATH manually for the mujoco_py build so avoid the error.

[33mcommit 585e20fccea0ba4d1e8201838bfe455fba45f97d[m
Author: Zhanpeng He <31218416+zhanpenghe@users.noreply.github.com>
Date:   Mon Aug 20 12:22:50 2018 -0700

    Save snapshots for ddpg (#306)

[33mcommit 3eae68a63b449b3009bdfb3ef5757b47af945b34[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Fri Aug 17 13:48:35 2018 -0700

    Remove repetitive prints of "using seed" (#297)

    * Remove repetitive prints of "using seed"

    The seed in use is printed by `garage.misc.ext.set_seed()`, but it's
    also printed by the sampler for each worker when workers are spawned.
    The proper place to print it is in the sampler, since single-process
    users who set their seeds already know what they've set it to.

    * Remove unused colorize dependency

[33mcommit 715927ec0acdd087f666b431918a1d28602db0e6[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Fri Aug 17 12:12:41 2018 -0700

    Add reccurrent policy to NPO (#272)

    Add recurrent policy support to NPO so that recurrent policies can be
    used in NPO/TRPO/PPO. This includes:

     - Fix a bug in tf/NPO. Not all the policies have `_dist` attribute,
       change it to use distribution property.
     - Add recurrent policy implementation to NPO. Recurrent policies use
       unflatten inputs.
     - Add unittests for recurrent policies in garage/tf.
     - Fix bugs in CategoricalLSTMPolicy and CategoricalGRUPolicy. Add them
       into test/tf/policies/test_policies.py to verify the initialization
       works.

[33mcommit 3c6a67cb8edb40c74aa9b042756731ddc3f0b7e5[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Wed Aug 15 11:10:47 2018 -0700

    Add dict support to garage (#270)

    Add dict support for TfEnv and TheanoEnv (as well as a test)

[33mcommit df186bd2285aaae811087990b8ecc4e8ddfeb5d8[m
Author: Zhanpeng He <31218416+zhanpenghe@users.noreply.github.com>
Date:   Tue Aug 14 07:59:21 2018 -0700

    Small fix for GaussianMLPPolicy (#282)

    Add initialization of bias for std network.

[33mcommit 3602aa25162ec3d2b7de415de8820c5b3bedd218[m
Author: Zhanpeng He <31218416+zhanpenghe@users.noreply.github.com>
Date:   Sat Aug 11 20:07:16 2018 -0700

    Some small fixes for TfEnv (#278)

[33mcommit 93ebf54e96aa1a060c154425e3cc33961d5b1aba[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Sat Aug 11 18:07:17 2018 -0700

    More small fixes for NPO (#277)

    * Uses name_scope more clearly in tensor_utils
    * Prevent action distribution logging from crashing because the
      action vector changes shape

[33mcommit 8b0aeccaa6303a0d3d6cb67f49f1c3903b471011[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Sat Aug 11 13:34:15 2018 -0700

    Small changes to NPO (#276)

    * Add softplus to entropy term to avoid negative entropy bonuses
    * Use primitive names for KV logging

[33mcommit 50b9631a89384059ffb0fbb0d55b4a70535c7df3[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Fri Aug 10 20:14:23 2018 -0700

    Fix CategoricalMLPPolicy (#264)

    The problem is that CategoricalMLPPolicy._f_prob and
    tf.Distribution.Categorical. It returns wrong shape array.
    Same as DeterministicMLPPolicy.

    Add unittest file for CategoricalMLPPolicy.

[33mcommit b9d123e20ae201280191cc3044e046e2b71b6417[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Fri Aug 10 17:36:43 2018 -0700

    Move DmControl{Env, Viewer} to a separate package (#269)

    This PR moves DmControlEnv and DmControlViewer to their own package,
    so that they are not automatically imported any time garage.env is
    imported (which, for practical purposes, is always). Previously, this
    meant that effectively all launchers import dm_control and pygame,
    slowing the launch process, increasing memory footprint, and making
    launchers more prone to crashing.

[33mcommit a84b7a38ce4e6d7c238b1812f4d004be204269ce[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Fri Aug 10 16:33:34 2018 -0700

    Replace ProxyEnv with gym.Wrapper (#253)

[33mcommit 733cbb8509041b5cda90e0c9614ac3ba51f59dec[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Fri Aug 10 15:50:27 2018 -0700

    Add pickled mode support to GarageEnv/TfEnv/TheanoEnv (#240)

[33mcommit f900aa231b76e371baaf16062a81c2f54eaed591[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Fri Aug 10 12:57:45 2018 -0700

    Add HER to DDPG (#265)

    Add Hindsight Experience Replay(HER) into TF. This includes:
     - Implement a HER replay buffer into garage. Also rewrite the regular
       replay buffer to make the two buffers has consistent interfaces.
     - Add a sampling strategy of HER replay buffer. Currently we use the
       future strategy in the original paper.
     - Add HER into DDPG. This part basically breaks with original DDPG
       which contains some repetitive code. Will fix later.
     - Add a benchmark test for HER + DDPG.
     - Change garage.theano.algos.DDPG to use the new regular replay buffer.

[33mcommit d2fccbafd3c51a7d15364e6888e9c7f75cef839d[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Fri Aug 10 12:08:16 2018 -0700

    Update setup_linux.sh based on Dockerfile.ci (#258)

    The dependencies used in docker to build garage in Travis CI have been
    added to the script to setup garage in Linux.
    Also, with the help of Argbash the following arguments have been added:
    - --tf-gpu: installs the GPU flavor of TensorFlow instead of the vanilla
    flavor.
    - --set-envvar: it writes the file ~/.bashrc to set the environment
    variables required by garage. Otherwise, the user is notified of the
    required variables to modify.
    - mjkey-path: the path to the MuJoCo license key.

    The current script has been tested in a fresh installation of Ubuntu,
    running the files under the examples folder (both Theano and TensorFlow)
    right after to make sure this setup file is working.

[33mcommit 38baa8b8d5c719efe3b57b1f18442b36d5c06371[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Fri Aug 10 11:17:59 2018 -0700

    Fix pickling in tf/regressors (#266)

    Pickling is broken in tf/regressor because tf/baselines didn't implement
    get_params_internal method.

    Also, inherit tf/regressors from Parameterized and delete unnecessary
    get/set params methods.

[33mcommit eff8fbd2e3fb295d3c42dbc28d9d7cbcb6ca64ad[m
Author: Eric Heiden <eric-heiden@users.noreply.github.com>
Date:   Thu Aug 2 18:56:19 2018 -0700

    Fix render(mode="rgb_array") (#161)

    Fixes #156

[33mcommit 46d319bba01983c43d8c202b336fb4ff995c89ee[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Thu Aug 2 11:51:08 2018 -0700

    Move contrib in garage.contrib (#256)

    This refactor moves all files inside contrib into the package
    garage.contrib.
    The corresponding imports of the moved files were modified as well.

[33mcommit a99b3561a5720586f0005803485125731a24790d[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Wed Aug 1 20:31:17 2018 -0700

    Set TRPO and PPO benchmark tests big to True (#254)

[33mcommit a124edcd95c1dcc16070e16244fdfcba6be169e3[m
Author: Zhanpeng He <31218416+zhanpenghe@users.noreply.github.com>
Date:   Wed Aug 1 14:01:02 2018 -0700

    Update sawyer environments (#238)

    This commit fixes the gripper issues for the sawyer mujoco model with a model that is more inspired by gym fetch_env.

    The SawyerEnv class is also updated so that all sawyer environments just need to specify a start configuration, a goal configuration, a reward function and a success function.

    A wrapper of goal env is added so that goal environments can be used with garage algorithms like ppo, trpo and ddpg

[33mcommit 8157b5757ac3463d71266e1d48f8e7805733c1b3[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Wed Aug 1 13:30:41 2018 -0700

    Add PPO to garage/tf (#193)

    Add Proximal Policy Optimization algorithm into garage TensorFlow tree.
    PPO can be inherited from NPO. The difference among PPO, NPO, and TRPO is
    the constraint of the surrogate objective. This commit rewrites the
    current NPO in garage tf so that it can run in GPU.

    The process_samples function in garage.samplers.BaseSampler only
    produces dense trajectories for RNN implementation. But it is faster if
    we always produce dense trajs and flatten them in GPU. This commit adds
    a process_samples function in garage.tf.samplers.BatchSampler and make
    it the default sampler for TF tree.

    Also, rewrite the TRPO in garage/tf since the NPO implementation has
    changed.

    Add flatten functions into garage/tf/misc/tensor_utils.py.

    Summary of what this commit does:
     - Add PPO implementation to garage tf tree.
     - Add example file of PPO into examples/tf/ppo_pendulum.py
     - Add benchmark tests of PPO and TRPO.
     - Add unit tests for garage.tf.misc.tensor_utils.
     - Add unit tests for garage.tf.algos.

[33mcommit 941ae087a57738630ae147c5512ee009bac93a62[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Wed Aug 1 11:49:33 2018 -0700

    Move Theano-dependent code in garage.theano (#245)

    The following modules were moved from garage.core into
    garage.theano.core package:

    lasagne_layers
    lasagne_powered
    network
    Also, the module lasagne_helpers was removed since no other module in
    the project makes reference to it, with the functions in lasagne.layers
    used instead.

    All the modules from garage.distribution package were moved into
    garage.theano.distribution.

    The following modules were moved from garage.algos into
    garage.theano.algos package:

    ddpg
    erwr
    npo
    ppo
    reps
    tnpg
    trpo
    vpg
    Regarding garage.misc, the module special.py is used by both the Theano
    and TensorFlow packages, but it contained some Theano dependent
    functions. Only those functions were moved into garage.theano.misc to
    keep the rest of the functions for both distributions in the new module
    tensor_utils.py. The same thing was done for ext.py.
    The rest of the modules in garage.misc are independent of Theano.

    All modules in garage.optimizers except for minibatch_dataset were moved
    into the garage.theano.optimizers package.

    All modules in garage.policies except for base were moved into the
    garage.theano.policies package.

    The module continuous_mlp_q_function was moved from garage.q_functions into the garage.theano.q_functions package.

    All modules in garage.regressors except for product_regressor were moved
    into the garage.theano.regressors package.

    The class ReplayPool found in module utils from garage.sampler was
    extracted from the module and moved to garage.theano.sampler.

    For garage.envs, only the function new_tensor_variable in module util
    makes use of Theano. It was removed since it's not called anywhere and
    other versions of it in garage.theano.spaces in modules product, box and
    discrete are called instead.

    The following modules in garage.baselines were moved into the
    garage.theano.baseline package:

    gaussian_conv_baseline
    gaussian_mlp_baseline
    The corresponding imports for each moved module were modified as well.

    Finally, all the PEP8 style errors were fixed.

[33mcommit e3dec971aa088d74690d2796a2fe97afa0b0643c[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Wed Aug 1 11:00:56 2018 -0700

    Fix lasagne error (#241)

[33mcommit b3f5757fa178a657bb336556d152af8e08edd6dc[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Wed Aug 1 05:43:26 2018 -0700

    Ignore flake8 docstring rules with renamed files (#244)

    Although only the files with status "added" are under the rules of
    flake8 docstrings, when files are moved, git diff will mark them as
    one deleted and added file. To avoid that and display the status of
    files as renamed, the option -M has to be added to git diff in the
    flake8 script

[33mcommit 46c99017f56b84a8b3d6de2254676e98fee427e5[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Tue Jul 31 16:25:02 2018 -0700

    Correct get_action() interface for tf/DDPG (#225)

[33mcommit fcbdcfb3eb90597f5ad24f0c0ee3d7b0c103e047[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Sat Jul 28 09:03:17 2018 -0700

    Fix bugs in garage/tf/baselines and optimizers (#230)

    Fix bug in penalty_lbfgs_optimizer.py.

    Fix scope bug in first_order_optimizer.py.

    Add baselines to garage/tf so we can use tf/regressors.

    Change default baseline name so the logger shows 'Baseline/'.

[33mcommit ed47aa5136fde8ee44eace0ab1cd0f123876209b[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Fri Jul 27 16:00:42 2018 -0700

    Add imports check for lines end with parentheses (#237)

[33mcommit 94554d3e4c46949160ab72859108f19ad03c9ae3[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Thu Jul 26 11:58:43 2018 -0700

    Install numpy with pip (#228)

    Partially fixes #201

[33mcommit 396d4a1d0b740a94576336461d54d49e1e403a49[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Thu Jul 26 10:08:14 2018 -0700

    Copy the config_personal from template in Travis

    Otherwise, some imports fail, since some configuration fields are only
    found in the template.

[33mcommit 59615f147a3e6300f817305fc97c3b97c8201014[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Wed Jul 25 23:52:45 2018 -0700

    Update to Python 3.6.6 (#223)

    This is necessary to install some things with pip.

[33mcommit b9b45a6ac14093f4f5ef81c8355e51b01cbbf2aa[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Wed Jul 25 14:25:05 2018 -0700

    Bump Theano to 1.0.2 (#219)

    See https://github.com/Theano/Theano/blob/rel-1.0.2/NEWS.txt

[33mcommit 6fe29309d0ab060d4b7b12c2c0a0d8c6fc8aaab6[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Wed Jul 25 12:05:22 2018 -0700

    Move scipy to pip stanza in environment.yml (#218)

[33mcommit be626ab8940296e6616a359828f00042d9ffda01[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Wed Jul 25 11:08:33 2018 -0700

    Delete circle.yml (#217)

[33mcommit 3c4062c0cdb761e6caee1261c88db8bfab96f05d[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Wed Jul 25 10:00:04 2018 -0700

    Move some easy deps from conda to pip (#215)

    This PR moves the least-dangerous deps from conda to pip installation.

    numpy/scipy have been ommitted because they are fundamental deps with
    binary platform-specific distributions, and thus most likely to break.

[33mcommit 59ba8599391813b5fc7c39268fd97a841eea9246[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Tue Jul 24 21:09:12 2018 -0700

    Update CONTRIBUTING.md

[33mcommit 989fd58c209f1bb9439cd28149d5fb0f827f6bc4[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Tue Jul 24 20:59:20 2018 -0700

    Update Lasagne git hash in environment.yml (#216)

[33mcommit 98a3f381ee752504f5e30a7123fb20862f14989b[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Tue Jul 24 15:42:14 2018 -0700

    Add unit testing (#191)

[33mcommit 4665a2244cf52ed37caba4369b8ea63e75e7c702[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Tue Jul 24 15:11:43 2018 -0700

    Use Docker for TravisCI (#205)

    * Adds headless Docker container with all garage dependencies
    * Changes some deps in environment.yml to fix build problems
    * Updates .travis.yml to produce and used cached Docker images
      from Docker Hub
    * Deletes old Dockerfiles

[33mcommit ba55e0cbdffae21079231ecbc6dfb7ecf581ce27[m
Author: Zhanpeng He <31218416+zhanpenghe@users.noreply.github.com>
Date:   Tue Jul 24 10:05:01 2018 -0700

    Use gym.GoalEnv for sawyer envs (#198)

    Added an abstraction for SawyerEnv.

[33mcommit 52ad0545f59827c6b7d5faf5a39232146b6982d9[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Mon Jul 23 21:34:39 2018 -0700

    Update installation.rst

[33mcommit 24a13180cce5869f5701b51285f1a4800f076aaa[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Mon Jul 23 11:53:12 2018 -0700

    Fix name scope in TensorBoardOutput (#208)

[33mcommit 4ef810643f162aebb1d9efd153a82e0dc9e9094e[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Fri Jul 20 14:45:53 2018 -0700

    Remove enclosing scope

    Enclosing scope is completely removed to avoid the unwanted duplication
    of TensorFlow variables, and instead variable_scope is used to create
    variables that will be further shared, while name_scope is used to group
    operations that interact with the shared variables.

[33mcommit f6cb6dd0bd9ae29778dbe9e01b242667764d93d8[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Mon Jul 16 18:10:21 2018 -0700

    Update .travis.yml

    Emergency commit to fix the build

    `conda update -q conda` was waiting for user input.

[33mcommit 1a12019318b2cbf450109a5cae58c1871e72aa9e[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Mon Jul 16 17:54:33 2018 -0700

    Cache conda directory in .travis.yml (#197)

    Adds caching to the TravisCI configuration

    Caches install directories for
    * MuJoCo
    * conda
    * pre-commit

    Minimum build time is now ~4 mins (compared to ~12min before)

[33mcommit b76729bce9375036ad5099acfccadafe138c9e9f[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Thu Jul 12 21:58:28 2018 -0700

    Check commit messages in the CI (#190)

[33mcommit 5c5f63674fe6a39125f0bca1e35a01e2a53f6637[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Thu Jul 12 18:44:36 2018 -0700

    Fix tf plotting for macOS (#192)

[33mcommit ac37e1e045a15536dd479f36287263ab95027693[m
Author: Hejia Zhang <hjzh578@gmail.com>
Date:   Fri Jul 13 06:04:11 2018 +0800

    Safety check (#173)

    Add safety check using MoveIt!, Clip action values according to action space.

[33mcommit 404a7d826e6b73d5155175038a279b2acc908ecf[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Thu Jul 12 14:41:43 2018 -0700

    Remove empty __init__.py files (#189)

    These are not needed in Python 3

[33mcommit 8b83832156fd8f11cc4f97603d17c85191627120[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Thu Jul 12 14:08:01 2018 -0700

    Refactor examples/theano/ to use TheanoEnv (#172)

    * Convert env in examples/theano to TheanoEnv
    * Replaced spec(env) with env.spec

[33mcommit fe5e07d7a2b9bb0afb9e9a1217175b881e1a2043[m
Author: Zhanpeng He <31218416+zhanpenghe@users.noreply.github.com>
Date:   Thu Jul 12 12:49:49 2018 -0700

    Remove rotation control for reacher env (#187)

    This allows a wider range to reach for the sawyer.

[33mcommit ab2cc92a199906b166a1efd9252688be8d4ab449[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Wed Jul 11 14:05:26 2018 -0700

    Remove /progress from Tensorboard output paths (#179)

    There is an argument in scripts/run_experiment that sets
    log_dir/progress as the tensorboard output dir. Delete it and set the
    tensorboard dir same as log_dir removes `/progress` in the end of every
    run.

    Also, mkdir_p in TensorboradOutput is useless and it creates an empty
    dir every run when rencord_tensor is not called. Delete it.

[33mcommit 975e02a5886b2282699ff2f67ba8ba366fa817ca[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Wed Jul 11 13:00:16 2018 -0700

    Fix baselines installation (#176)

    Fix baselines installation in environments.yml. Using `pip install
    baselines` installs the wrong version of baselines. Change it to install
    using git.

    Add mpi dependency in setup_linux.sh and setup_osx.sh.

[33mcommit 9615cdf7430d5a2f1987f8f835db2e1442d71a16[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Wed Jul 11 12:01:27 2018 -0700

    Update pre-commit instructions in CONTRIBUTING

[33mcommit 9071c117be850a6219fcfb0ff83b722c6cb4217e[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Tue Jul 10 16:54:03 2018 -0700

    Centralize examples in garage (#167)

    TF and Theano examples are located in examples/ in separate directories.

[33mcommit 649037f5bdc902f155b2eac065c5051e665e0e00[m
Author: Zhanpeng He <31218416+zhanpenghe@users.noreply.github.com>
Date:   Tue Jul 10 14:48:47 2018 -0700

    Sawyer reacher mujoco (#130)

    Add reacher environment to mujoco.
    Add task space control to the pick-and-place environment.
    Fix a collision detection bug for the sawyer model/

[33mcommit 3be3b064b114b203f223864f38fd4e01d7662bd2[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Tue Jul 10 10:38:32 2018 -0700

    Fix spec() implementation (#164)

    spec(env) now returns garage.Spaces, and the algorithms using
    env_spec are updated accordingly to treat them as garage.Spaces.

[33mcommit 32a36f6641f1adc9db53bdda121ab8c96ec074c6[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Mon Jul 9 14:35:21 2018 -0700

    Mock out dm_control in check_imports.py (#160)

    Some import tests have been failing because dm_control is having
    trouble finding glew libraries in TravisCI (even though we install
    them).

    The best solution to this problem is to control our CI environment
    more closely using Docker (See #159). In the meantime, I am mocking
    dm_control imports out of the check_imports.py script, so that
    dm_control can't break the build.

[33mcommit 7103a0ae1bf9d67044ee4121703e0d9877e3e562[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Mon Jul 9 11:28:40 2018 -0700

    Use tf.variable_scope() in FirstOrderOptimizer (#154)

    TF optimizers add gradient annotation variables (e.g. foo/Adam:0) to the
    variable scope of the TF ops associated with the gradient. This creates
    a problem for Parameterized classes, because constructing the
    Parameterized class in a new process will *not* construct the
    optimizer as in the main process, meaning that these annotation
    parameters will be missing. This causes the class to fail to serialize
    across processes.

    Enclosing FirstOrderOptimizer's TF op creation in tf.variable_scope()
    quarantines the new annotation parameters in a new variable scope,
    away from subgraphs of Parameterized primitives.

[33mcommit d6d111b5f286c9f52142b450b15f2ca8a4670355[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Mon Jul 9 10:46:03 2018 -0700

    allow_multiline_lambdas in YAPF (#157)

    Otherwise YAPF will fail to wrap lines with lambdas, leading to
    conflicts with flake8. Despite not being the default, this setting
    does not appear to conflict with PEP8.

[33mcommit c2ee74823cd35b5a30da6e3994bc0472f2c9f1f0[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Sat Jul 7 17:21:51 2018 -0700

    Update .gitignore (#155)

    Updates .gitignore to catch Sublime hidden files more generally

[33mcommit 1174ccc1d19b20319308c847ac9ce069f1bac25a[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Fri Jul 6 15:12:01 2018 -0700

    Run some CI checks using pre-commit (#149)

    Refactored pre-commit to also include yapf and pylint checks.

[33mcommit 560a18def1fbf37d3c1cc10627cd7f3853bc7bb6[m
Author: Hejia Zhang <hjzh578@gmail.com>
Date:   Fri Jul 6 13:40:52 2018 -0700

    Tune the sawyer mujoco envs to match the real setup (#148)

    - modify sawyer_robot.xml to match real robot
    - add bin's xmls

[33mcommit 73e28de6ec2ddf0b3ae45b51938aebe8d037da1d[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Fri Jul 6 13:22:58 2018 -0700

    Reraise exceptions caught in run_experiment.py (#153)

    We catch BaseException in run_experiment so that we can cleanly
    terminate all of the worker processes when an interrupt occurs. If we
    don't re-raise the exception after cleaning up, all exceptions which
    end the program are silently supressed.

    This change re-raises the caught exception after clean-up so that it
    propagates to the user.

[33mcommit 43153f3f1a061c4d9429233b2a34baa81233fb1e[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Fri Jul 6 12:30:50 2018 -0700

    Override plot parameter of algorithm constructor (#119)

    When running a training session, there's two places to enable the
    plotter: the algorithm constructor or the function run_experiment.
    However, when using run_experiment, if its plot parameter is false, all
    the algorithms that run under run_experiment have to keep their Plotters
    disabled as well.
    A static variable was introduced in the Plotter class (both in the
    Theano and TensorFlow branch) to disable the Plotter from the
    run_experiment function.
    Also, a cleanup of the plotter in the Theano branch was performed, and
    there's some legacy PEP8 style errors that where fixed.

[33mcommit 8958515c4f0922513846c8ec760f94273a490bba[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Fri Jul 6 11:46:55 2018 -0700

    Move spaces into respective directories (#150)

    Move garage.spaces.{theano, tf} to garage.{theano, tf}.spaces.

[33mcommit 9340ee6bf73917e88a5782ebcbb4f76c751bce41[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Fri Jul 6 11:03:10 2018 -0700

    Missing changes to cleanly exit worker processes

    The worker processes pool is only created when n_parallel is bigger than
    1, so n_parallel=1 was creating null exceptions when terminate was
    called. This is solved by adding a guard to check if the pool was
    instantiated.
    Another fix that is required is to rename back the member g in
    singleton_pool to G. This was done in a previous change to enforce PEP8
    style of having non-capital variables/parameters, but the member has to
    keep the same name as defined in singleton_pool.

[33mcommit f13bb1af790e550d9a3c5185148b7be70d79fc60[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Fri Jul 6 09:12:16 2018 -0700

    Move garage.tf.replay_buffer to garage.replay_buffer (#151)

    Replay_buffer is a fixed size memory to store experience transitions. It
    has no tf dependencies. Move it to garage.replay_buffer.

    Replace SimpleReplayPool in garage.algos.ddpg with garage.replay_buffer.

[33mcommit dcdc6b4e29edf22a1df9a0b4a708e7d9b6d447de[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Thu Jul 5 18:07:06 2018 -0700

    Cleanly terminate worker processes on an interrupt

    When calling function run_experiment and the parameter n_parallel is
    bigger than zero, worker processes are created to do parallel sampling
    during the training. However, when there's a keyboard interrupt, there
    are certain occasions when processes are not completely killed after the
    execution has finished.
    By checking the PID of these processes using the command "ps -fu | grep
    run_experiment", we noticed they had the status code "Sl", where S means
    interruptible sleep, so the processes are waiting for a signal to wake
    up and continue their execution.
    When executing the command "kill -SIGINT <pid>" with the PID of the
    sleeping process, we got the python trace back and found that the
    processes were sleeping trying to acquire the lock of the inqueue inside
    the pool of python multiprocessing.
    By default, when a keyboard interruption occurs all processes get
    notified, but the notifications are not sent in any order. This could
    produce an issue when a process is interrupted and finished without
    releasing the lock that other process are waiting for as it's in this
    case.
    To avoid this problem, the parent of the worker processes catches the
    BaseException (consider other cases besides the KeyboardInterrupt) and
    terminates makes sure to terminate the pool of worker processes to avoid
    the dead locks.
    Also, the start method of joblib was configured as forkserver. As
    indicated in joblib documentation, the JOBLIB_START_METHOD environment
    variable has to be set as "forkserver". In garage, this is now done at
    the beginning of the run_experiment function, so the child process that
    runs joblib has the start method configured as forkserver.
    An assert is added to the child process that runs the experiment to make
    sure the variable is correctly set.
    Other changes were required to enforce the PEP8 style in legacy code.

[33mcommit 1058f9aa50c7c279aa74bdc66f52e05f30582dd6[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Thu Jul 5 16:37:57 2018 -0700

    Fix render() in mujoco envs (#142)

     - There were missing overrides imports in mujoco/sawyer. Add them.
     - NormalizedEnv didn't implement render(), therefore caused
       NotImplementError. Add render() in NormalizedEnv. Same with
       GridWorldEnv.
     - Fix multiple errors in EmbeddedViwer. There were wrong params
       assignments and missing interaction setting such as set default
       camera.
     - Fix multiple errors in GatherEnv and GatherViewer.
     - Reformat with PEP8.
     - Remove function calls that don't exist in MjViewer.

[33mcommit 96733d8496fd607176dc39b31fe81b54286a113b[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Thu Jul 5 15:32:26 2018 -0700

    Add top-level base Space class for garage (#140)

    * Both TensorFlow and Theano spaces inherit from and build off of garage.Spaces

[33mcommit 87f538d7c8d4702880249845b8ac050e5742c371[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Thu Jul 5 13:21:49 2018 -0700

    Fix key space in record_histogram (#141)

    Enclosing variable scope outside the record_hisogram function in
    TensorBoardOutput messed key spaces in self._histogram_ds. Fix it by
    enclosing variable scope only outside the variable.

[33mcommit c4f9192d4537197ec9e7378bca36c8266f22c842[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Tue Jul 3 18:38:13 2018 -0700

    Ignore PEP8 rule W503 for flake8 (#126)

    W503 enforces the break after the operator, which is acceptable by PEP8,
    but it's preferred to do it before the operator. Since YAPF enforces the
    preferred style, this rule is ignored to avoid conflicts between both
    lint tools.

[33mcommit 28615c539674b39af590dae973cf253909770322[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Tue Jul 3 18:12:19 2018 -0700

    Set up mujoco in setup_linux.sh and setup_osx.sh

    The script setup_mujoco.sh is called now from the scripts to install
    garage in Linux and OS X, since it's required by the packages installed
    by conda.
    Also, the three scripts were formatted with the style defined by Google.

[33mcommit c1c05339121b7eb79b7387092ecc4833d799a8b6[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Tue Jul 3 16:56:34 2018 -0700

    Fix box2d render issue (#136)

    * Removed all kwargs from render() as box2d_env inherits from gym.Env
    * Added `mode` parameter to conform to gym.Env

[33mcommit df7add16f1dba7ff3b0b5ea3a68ff1b9133f1fa4[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Mon Jul 2 16:32:27 2018 -0700

    Add DDPG to TensorFlow (#66)

    * Add OU exploration strategy to TensorFlow

    Ornstein Uhlenbeck exploration strategy comes from the
    Ornstein-Uhlenbeck process, which is a stationary process that describes
    the velocity of a Brownian particle under the influence of friction. The
    OU strategy is often used in DDPG algorithm because in continuous
    control task it is better to have temporally correlated exploration to
    get smoother transitions. And OU process is relatively smooth in time.

    * Add replay buffer to TensorFlow

    Replay buffer is an important technique in reinforcement learning. It
    stores transitions in a memory buffer of fixed size. When the buffer is
    full, oldest memory will be discarded. At each step, a batch of memories
    will be sampled from the buffer to update the agent's parameters. In a
    word, replay buffer breaks temporal correlations and thus benefits RL
    algorithms.

    DDPG uses replay buffer to update parameters in policy network and q
    function network.

    This commit implements a ReplayBuffer class to TensorFlow. In each step,
    it adds a transition of (observation, reward, terminal, action,
    next_observation) into the memory buffer. And returns a dict of a batch
    of transitions when agent asks for a sampled transitions.

    * Implement actor-critic for DDPG

    DDPG uses actor-critic method to optimize the policy and reward
    prediction. The actor-critic method a kind of TD method. It consists of
    an actor, which is a policy network used for action selection, and a
    critic, which is a q function network used for action value estimation.
    The critic genetates TD error to indicate the optimization of actor and
    critic.

    In DDPG, actor accepts observation as input, uses MLP to fit the mapping
    from observation to action, then outputs the predicted action. The
    critic accpets observation and action as the input, output the q value.

    Here, the policy network is named as ContinuousMLPPolicy. The q function
    network is names as ContinuousMLPQFunction.

    * Add DDPG to TensorFlow

    Deep Deterministic Polict Gradients is an off-policy reinforcement
    learning algorithm for contiunous control tasks. It uses the replay
    buffer and two target networks, corresponding to policy and q function
    network, to stablize the training process.

    This DDPG algorithm uses the primitives in garage/tf to set up the
    algorithm.

    * Add launcher file for DDPG to TensorFlow

    * Add miscellaneous change to DDPG

     - Fix bugs in DDPG. The last DDPG incorrectly calculates action_loss.
     - Set output_nonlinearity param to tf.nn.tanh in ddpg_pendulum.py.
       Without this, the training process will be negatively influenced.
     - Delete mistakenly pushed files.

    * Reorder imports and add docstring

     - Add missed args in docstring
     - Reorder imports in alphabetical order

    * Add tf async plotter to DDPG

     - Add tf async plotter to DDPG
     - Formatting other files

    * Improve training process of DDPG

    Add transitions to DDPG when terminal is True. This proves to improve
    the average return significantly.

    * Reformatting ddpg.py to conform with flake8

     - Add multiple docstring to ddpg.py.
     - Change get_target_ops to module methods since it is rather a static
       method than a class method.

    * Break lines in q_functions/__init__.py

    Break lines in garage/tf/q_functions/__init__.py because line is too
    long.

    * Add multiple docstrings to multiple files

    There are several files has missing docstrings. Add them to pass flask8
    checks.

    * Add miscellaneous changes

     - Fix errors in docstring.
     - Reorder imports.
     - Add requirement third party lib baselines into environment.yml.

    * Add benchmark test into tests

    Add a benchmark script which can run regression tests between baselines
    and garage algorithms.

    For different algorithms, imports, params, method run_garage() and
    run_baselines() need to change.

    * Add requirement lib for mpi4py

     - Mpi4py needs libopenmpi-dev be pre-installed in Linux.

    * Change tf_benchmark_ddpg plotter

     - Change plotter in tf_benchmark_ddpg.py from one plot per trail to one
       plot per task, one curve per trail.

    * Reformat code with YAPF

    * Add another dep of mpi4py

    Add openmpi-bin to deps so that the check_imports passes.

    * Add title into benchmark plotter

    * Fix syntax error in q_functions/__init__.py

    * Add miscellaneous change

     - Use flat_dim to get dimenstion of space.
     - Change error comment in the class docstring of DDPG.
     - Use tf.set_random_seed to get same sequence of values.
     - Delete trainable=True in the build_type().

    * Fix D413 in multiple files

    There should be a blank line after last section of docstrings.

    * Add miscellaneous change

     - Use bounds in garage.envs.util to get action spcace bound.
     - Set built_net to private.
     - Namespace log in DDPG to a relevant component.
     - Move benchmark.png to the parent directory, more convenient.
     - Set default params of DDPG to the one gets best performance.
     - Refactor critic_optimizer name in DDPG.

[33mcommit 580220756b9f918c72733926eb89c82da32f086b[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Mon Jul 2 16:07:33 2018 -0700

    pre_commit environment fix (#137)

[33mcommit a16706fe810270374e66ce931e2b890cf4b44cbe[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Mon Jul 2 15:45:53 2018 -0700

    Fixed tf EnvSpec assert issue (#135)

    assert() statement now checks for correct class

[33mcommit 97a9bbf77c3bd2bc7ce3963786ea2b60b5f5857d[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Mon Jul 2 11:14:17 2018 -0700

    Add support for alphabetizing logger tabular (#124)

    * Add support for alphabetizing logger tabular

    Group each tabular data together by the alphabetical order of their
    keys.

    * Update docstrings

    Update command results in tabulate's docstrings.
    Format with flake8.

[33mcommit 09c99825f969a6ab8581b450c57602f9d07fad86[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Fri Jun 29 20:11:51 2018 -0700

    Add pre-commit to garage

    This PR adds pre-commit support to garage, a multi-language package manager
    for pre-commit hooks. pre-commit helps you adhere to the git commit message
    guidelines, such as reminding you to keep your subject line to 50 characters
    and to wrap your body to 72 characters.

[33mcommit 5378034533a47dad101c6f60e628a64442b439ed[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Fri Jun 29 14:07:38 2018 -0700

    Add name_scope in TensorBoardOutput (#118)

    * Add name_scope in TensorBoardOutput

    The record_histogram and get_histogram method in TensorBoardOutput
    wasn't group together, so all the variables created in them polluted the
    computation graph. By adding a name_scope in the constructor, all
    the nodes will be grouped under node TensorBoardOutput in the graph.

    Also, update examples/example_tensorboard_logger.py.

    * Fix bugs in TensorBoardOutput name scope

    The last commit has a bug. Using self._name_scope.__enter__() creates a
    scope block. Consequently, if there are variables created after calling
    get_histogram_by_type(), the node will shown as a subnode of
    TensorBoardOutput, which does not make sense.

    Instead, set a global name scope for TensorBoardOutput class, and using
    enclosing_scope to enclose all the subnodes under this glbal name. This
    fixes the above bug.

[33mcommit cc5d4627a7306c3586257f29c2def6121d7f04ec[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Fri Jun 29 10:53:44 2018 -0700

    Add log_diagnostics to normalized_env

[33mcommit dfbe8ae2c91ed4b9fbdc6a1dae8ad41be5c2b6c0[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Fri Jun 29 10:29:13 2018 -0700

    Fixed GLEW import issue

    In order to correctly import glfw, we must first import mujoco_py.

[33mcommit 8eedf58dd51efd54579723fd97c092cc5ca09bd8[m
Author: Hejia Zhang <hjzh578@gmail.com>
Date:   Wed Jun 27 15:38:53 2018 -0700

    Add gazebo reacher env (#99)

    Add gazebo reacher env

[33mcommit 797ef6ad76ab6c8085507c71697bd27d15835b91[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Tue Jun 26 14:57:43 2018 -0700

    False positive of flake8 checkers

    The script check_flake8 was returning a successful status even if flake8 was failing. The
    exit status of flake8 is obtained and returned in the main script so Travis CI detects the
    error as well.

[33mcommit a6f8846f635b2eb7f393adf67025236a9a1b54c0[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Tue Jun 26 13:12:50 2018 -0700

    Support different rollout functions TF plotter (#102)

[33mcommit 755592c5c4fb3bc2ef1a1ac451661b63d6432e2f[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Tue Jun 26 12:56:45 2018 -0700

    Support multiline imports in check_imports.py (#105)

[33mcommit 3fad0ef5ef0ffb26421a74d203eb93a07df91229[m
Author: Zhanpeng He <31218416+zhanpenghe@users.noreply.github.com>
Date:   Mon Jun 25 16:02:13 2018 -0700

    Fix dm_control installation for linux (#100)

    * fix dm_control installation for linux (Issue #27)

    * fix a small bug in normalized env

[33mcommit 42f47a32ff9373395e852734935f31f8c3ee834b[m
Author: Hejia Zhang <hjzh578@gmail.com>
Date:   Fri Jun 22 00:14:34 2018 -0700

    Fix contrib.ros 'from garage.config_personal' should be 'from garage.config' (#96)

    - Refer to #95

[33mcommit d2821d6b9c16731358d75866440ec31af3b2803a[m
Author: Zhanpeng He <31218416+zhanpenghe@users.noreply.github.com>
Date:   Mon Jun 18 11:47:36 2018 -0700

    Update normalized_env (#91)

    Update normalized_env because all environments in garage now are converted to conform with gym.Env.

[33mcommit f48614c8df0ef2a2678caf76e9db24178eaab72b[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Mon Jun 18 09:49:39 2018 -0700

    Update README.md

[33mcommit 5b61f8c7e613698304eb86b67f0217fec4f6df60[m
Author: Zhanpeng He <31218416+zhanpenghe@users.noreply.github.com>
Date:   Mon Jun 18 00:41:46 2018 -0700

    Fix tf distributions (#97)

    Some minor fixes for issues I found for tf distributions. They should inherit garage.tf.distributions.Distribution because the dist_info_keys method is implemented there.

    Also an import issue is fixed.

[33mcommit 924cc74428aca6b973208b9d64440a0acc5b998d[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Sat Jun 16 11:35:26 2018 -0700

    Remove quotes in filename variables in pep8 checks (#89)


    Both the scripts for pylint and flake8 were doing the correct filename
    subtitution but with added quotes that were passed to corresponding
    command for pylint and flake8, not checking any file at all.

    For example, the bad command produced was:
    `pylint 'garage/algos/cma_es_lib.py garage/envs/dm_control_env.py'`

    Instead of:
    `pylint garage/algos/cma_es_lib.py garage/envs/dm_control_env.py`

    This commit fixes the problem. Also the grep command is used to filter
    the python files, because flake8 and pylint may check on all the files
    passed to them.

[33mcommit c005820f1ff6158c41e09ceb0d3577f1eab9bf67[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Fri Jun 15 16:16:28 2018 -0700

    Renamed run_experiment_lite to run_experiment

[33mcommit 8f8eb3b6e172cd3bdfb7173064213b60b5f07ee0[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Fri Jun 15 13:20:21 2018 -0700

    Remove blank config_personal.py (#94)

[33mcommit 70c77a3324918a731d2b577a1a623d3aa0e92528[m
Author: Zhanpeng He <31218416+zhanpenghe@users.noreply.github.com>
Date:   Fri Jun 15 11:36:30 2018 -0700

    Add mujoco sawyer envs (#76)

    * Add mujoco sawyer envs

    * fix import order

    * move from rllab to garage

    * more refactor

    * Use short import

    * refactor goal_distance method

    * yapf

[33mcommit c54169ad4e0d7d7b545b79db85c691a61b6be51b[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Fri Jun 15 11:18:17 2018 -0700

    Fix tensorboard creates another TF device issue (#88)

    * Fix tensorboard creates another TF device issue

    Class TensorBoardOutput used to create tf.Session in its constructor.
    But the session seems to launch a TF device. Since the only use of the
    session is to dump histogram, and usually there is a session created as
    default when dump histograms into tensorboard. So I deleted it in the
    constructor and moved it into method _dump_histogram.

    There is also a circular import in TensorBoardOutput, deleted it.

    * Format with PEP8

    Missing lines in tensorboard_output.py

[33mcommit 9bcb322bb67b0363eb8c6de819d175e291a5724f[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Fri Jun 15 10:02:10 2018 -0700

    Fixed PointEnv for test_env

    * All tests using PointEnv now pass in test_env

[33mcommit 17347a1682e28fc4bac8c2e922da67f7fa1b2f89[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Fri Jun 15 09:47:57 2018 -0700

    Remove all usage of garage's internal tf.space

    * All algorithms and policies now correctly depend on gym.spaces

[33mcommit cf7505cb0c6b9de1a7bebda8be5ccdcedbd890f8[m
Author: Hejia Zhang <hjzh578@gmail.com>
Date:   Thu Jun 14 19:08:10 2018 -0700

    Sawyer runtime (#67)

    - Add real sawyer support
    - refer to #20

[33mcommit 76f17e588ed436287ad0071b9ad9d8f90a5d4fd3[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Thu Jun 14 18:39:13 2018 -0700

    Check docstrings only on added files (#83)

    The docstring checks are only applied to added files to avoid
    errors when refactoring legacy code.
    Also, other checks are only applied to modified files to avoid errors on
    copied, deleted or renamed files.
    Other miscellaneous changes include:
    - The name rllab was replaced for garage in option --application-import-
    names.
    - Dots were missing in grep expression at check_pylint.

[33mcommit 7b1cc1ba254f51c7baf9f7fb3ec383edfa4980a5[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Thu Jun 14 15:38:28 2018 -0700

    Fix local package names in flake8 config (#77)

    Also removes mistakenly included old sandbox files.

[33mcommit 16016ec67b231896ea3ff885068354636e1bcf2f[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Thu Jun 14 14:17:04 2018 -0700

    Add PEP8 checks to the CI

    Two lint tools have been added to Travis CI to enforce the PEP8 format
    in the new commits pushed to the repository.
    The tools are pylint and flake8, since the latter does not cover all the
    rules found in PEP8.
    Only the error codes for PEP8 have been enabled for the lint tools, and
    they're defined in the file setup.cfg at the root of the repository.
    Developers can run flake8 and it will automatically fetch the
    configuration from setup.cfg, but it's recommended to only do it on the
    set of changed files, since the project currently has many format errors
    introduced in the legacy code.
    Run the following command to check errors with flake8:
    $ git diff origin/master | flake8 --diff
    Pylint cannot analyze differences as flake8, so pass only the names of
    the files to verify and the configuration file like so:
    $ git diff origin/master --name-only
    >   | grep "*.py"
    >   | xargs pylint --rcfile=setup.cfg
    Assign an alias for convenience and run the commands above before
    pushing the code for review to avoid spending time waiting for Travis to
    spot the errors.
    If there's a conflict between pylint or flake8 with yapf, disable yapf
    only for the lines of code that present this conflict, as exemplified
    here:
    https://github.com/google/yapf#why-does-yapf-destroy-my-awesome-
    formatting

[33mcommit 3c58b86c2bce99a6df99cb2d461fd82ca1242916[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Wed Jun 13 18:44:13 2018 -0700

    Rename rllab to garage (#62)

[33mcommit f1b2716fbbdd3d7e9674cfffa6ddfba31b501661[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Wed Jun 13 14:18:14 2018 -0700

    Replaced rllab.envs.Env with gym.Env (#58)


    rllab.envs.Env has become obsolete, as the community has embraced the
    gym.Env interface. This change replaces rllab.envs.Env to make gym.Env
    the *only* Environment abstraction in garage. All garage components can
    communicate with any instance of gym.Env, and all garage environments
    implement gym.Env (though they may be backed by anything, not just gym).

[33mcommit 377d9f8157fcf3037261c07e5218f181fd81a82a[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Wed Jun 13 12:43:05 2018 -0700

    Update CONTRIBUTING.md

[33mcommit ea26ede43023993b63ae80b14b1433b6a21974ba[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Wed Jun 13 09:42:53 2018 -0700

    Update CONTRIBUTING.md

[33mcommit 64831a62ff1537047194f5835de9d9237884edc9[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Tue Jun 12 20:14:36 2018 -0700

    Fix check_imports CI script (#64)

    The check_imports CI script was not detecting all broken imports, and
    some snuck in.

    This change makes the check_imports script more strict, and fixes the
    problems detected by the stricter check.

[33mcommit 9ff2f5bb74c175606bdafbbb0cd472c6d4ca8e8c[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Tue Jun 12 18:52:13 2018 -0700

    Added asynchronous plotting to TensorFlow (#56)

    * Converted synchronous to asynchronous plotting of TensorFlow.
    * Implemented a better naming scheme for variables and functions

[33mcommit 6c29cc9ed29aa4b85caf71667a1dc1e1f876e292[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Tue Jun 12 18:38:31 2018 -0700

    Remove remnants of sandbox.rocky.tf (#65)

[33mcommit e4b6b194d224b83b054ad9018aed58b41f659f43[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Tue Jun 12 17:43:38 2018 -0700

    Fix check_imports CI script (#63)

    It was previously failing because imports "from __future__ ..." must
    come before all others. This change adds a feature to ignore arbitrary
    module names, and adds "__future__" as one of those modules.

[33mcommit bcef914f5ae1ee77727005d23b09b7e88c3ac34b[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Tue Jun 12 16:45:20 2018 -0700

    Update .gitignore (#61)

[33mcommit 438f9df82b810f1049036ce1925d79e884be0cfe[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Tue Jun 12 16:28:32 2018 -0700

    Dynamics randomization for MuJoCo (#51)

    Add support for dynamics randomization for mujoco environment.
    Includes a simple data structure consisting of a list of variation
    objects, a wrapped environment of mujoco to perform dynamics
    randomization.
    Each variation object is an instance of the Variation class
    that works as a container for each of the fields used to randomized a
    dynamic parameter within the simulation environment.
    The wrapper class of mujoco performs dynamics randomization on each
    reset().
    The data structure and the wrapper class are tested in
    test_dynamics_rand.py.

    Refer to: #14

[33mcommit 38f5f97cdf4fd266de6a38cb021469ccd3ad5909[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Tue Jun 12 15:11:37 2018 -0700

    Moved sandbox.rocky.tf to rllab.tf (#54)

    Upgraded tf to first-class citizenship. This means that the sandbox.rocky.tf folder is now located at rllab.tf.

[33mcommit 931822dfffdb8561249dac0f18c69b27d6067f53[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Tue Jun 12 09:54:29 2018 -0700

    Create CONTRIBUTING.md (#52)


    * Sets out guidelines and review process for project contributions
    * Documents git workflow and provides examples
    * Documents official style and code quality standards

[33mcommit f4fcefde8cabc67d43acfaf3d323fe169c340e63[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Tue Jun 12 09:35:04 2018 -0700

    Fix circular imports created by alphabetization (#59)

    This PR also adds an automated import test to prevent future breakages
    from circular imports.

[33mcommit fd9a073e56a1c2a03f72ae4df7b5e684134f8dc9[m
Author: Hejia Zhang <hejiazha@usc.edu>
Date:   Mon Jun 11 11:28:00 2018 -0700

    Refactor rllab ros (#50)

    - refactor rllab ros
    - add worlds

[33mcommit 8619820dd19d117a9ec6dbb6fcb9e0d8b66dd62d[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Mon Jun 11 10:03:58 2018 -0700

    Update README.md

[33mcommit 9205fddb6df9f93ea933fd66b2eabe2fb563b6e3[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Mon Jun 11 09:48:23 2018 -0700

    Update README.md

[33mcommit eb43cc8745986a6a388e311620eb76aab1401ff2[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Sun Jun 10 23:03:18 2018 -0700

    Add EditorConfig (#49)

    Facilitates automated configuration of most editors for parts of the style guide.

[33mcommit d94934ecc335f8c3917cb0068f1f3cdafc3cf1f3[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Sun Jun 10 21:47:16 2018 -0700

    Create CODEOWNERS

    This will ensure that all PRs get at least one review from a maintainer

[33mcommit d6419f22f58e8a9cde82454126bef90b04d462a5[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Sun Jun 10 21:25:00 2018 -0700

    Formatting tweaks to make the CI green

[33mcommit 1cd44cef190b6b374be3823e806cf381f9973a60[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Sun Jun 10 21:14:33 2018 -0700

    Add import order support to the CI

    Also turns off changed-files-only rule for YAPF formatting

[33mcommit a4b5a39206712023fe5a2aa8c5b41aa2113608ac[m
Author: Ryan Julian <rjulian@usc.edu>
Date:   Sun Jun 10 21:05:36 2018 -0700

    Group and alphabetize imports according to PEP8

    flake8 --import-order-style=google --application-import-names=sandbox,rllab,examples,contrib --select=I100,I101,I201,I202

[33mcommit e92860c1b009dda7d7f208dcbc2032e0f6068160[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Sun Jun 10 17:17:29 2018 -0700

    Update LICENSE

[33mcommit 75349b354a9b905b60cb5be5db30e310a4cd1be5[m
Author: Ryan Julian <rjulian@usc.edu>
Date:   Sun Jun 10 17:15:35 2018 -0700

    Format with yapf and limit line length to 80 char

    yapf -irp --style=pep8 .

    Some hand-crafted corrections added

[33mcommit 00ec862d92057a0bf2921cf44e9b3af2f0116277[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Thu Jun 7 12:26:04 2018 -0700

    Asynchronous plotting for Theano (#124)

    Added support for asynchronous plotting for Theano. The main caveat is that Linux machines need to use multiprocessing.Process and Mac OS X machines need to use threading.Thread. If Linux machines use Threads, the program slows to a crawl (like as a result of Python's Global Interpreter Lock GIL); conversely, if Mac machines use Process, the glfw will throw a segmentation fault and fail to draw the window.

[33mcommit 5c5d3a26b8a8f5a4efc05349b22bda185b18ea2c[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Tue Jun 5 10:15:02 2018 -0700

    Upgrade gym to v0.10.5 (#122)

    This is necessary to use mujoco_py>=1.5

[33mcommit c32e6cc86ea0307b1fdfe1821ec82c71df66ff80[m
Author: Ryan Julian <ryanjulian@users.noreply.github.com>
Date:   Mon Jun 4 16:00:05 2018 -0700

    Add missing convenience imports and fix circular dependency (#113)

    Adds missing convenience imports to __init__.py files, and moves some
    utilities from rllab/algos to rllab/sampler to fix a circular import
    dependency.

[33mcommit 60c68671ebdb5a7f9dd32be836beadee3713cc58[m
Author: Hejia Zhang <hjzh578@gmail.com>
Date:   Thu May 31 13:28:32 2018 -0700

    Refactor sawyer robot interface (#115)

    - refactor sawyer robot interface and how it is used.

[33mcommit 8a5ee1a91d7a25fe57c3cd805bb659246b3efdd4[m
Author: Hejia Zhang <hjzh578@gmail.com>
Date:   Thu May 31 13:05:00 2018 -0700

    Add task object manger interface (#114)

    - Users use this to mange every objects in task except for robots.

[33mcommit 839bfe127288ea4f397154b4d3b23fad683e80d8[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Thu May 31 12:07:07 2018 -0700

    Merge tensorboard summary and tensorboard output (#103)

    * Merge tensorboard summary and tensorboard output

    Merge tensorboard_summary.Summary into
    tensorboard_output.TensorBoardOutput, which supports
    graph, scalar, tensor, and histogram logging to
    tensorboard.

    The private function in TensorBoardOutput starts with '_'.
    All other functions are public.

    What this commit does:
    1. Optimize imports
    2. Merge class
    3. Solve the duplicate fields in custom scalars.
    (https://github.com/ryanjulian/rllab/pull/88#issuecomment-392245839)

    * Add deps in environment and alphabetize imports

    Add dependencies jsonmerge and protobuf into environment.yml.
    Alphabetize imports.

[33mcommit 59bcc7f182c190fc6a79f5fe5cbb26424e24ea17[m
Author: Hejia Zhang <hjzh578@gmail.com>
Date:   Thu May 31 11:13:42 2018 -0700

    Implement specific env functions for specific task (#106)

    make every specific task env has its own implementation of sample_goal, get_observation, reward, _goal_distance.

[33mcommit e9468f61ade2231afd3ff36e2fd515e94ea50797[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Wed May 30 21:21:04 2018 -0700

    Fixed glfw throwing segmentation fault, requires reverting back to synchronous plotting (#112)

    This PR enables the glfw window to be drawn when plot=True, but requires
    reverting the implementation of plotter back to synchronous plotting.
    This is because asynchronous plotting throws a segmentation fault within
    glfw. Furthermore, every 'import glfw' statement must be preceded with
    'import mujoco_py' to ensure that glfw is being imported properly.

[33mcommit 06b6de374478b8930cfa970faa410a045e2210d8[m
Author: Hejia Zhang <hjzh578@gmail.com>
Date:   Wed May 30 12:39:22 2018 -0700

    Move ros node init to launcher files (#104)

    I moved ros node init to launcher files, so that I can ensure after init every thing related to ros can work. Before this change, ros node init happens in one class constructor which is not good.

[33mcommit 431590663c394411b16b87d3f9a1a8b4abef697b[m
Author: cjcchen <ickchenjunchao@gmail.com>
Date:   Thu May 31 00:43:06 2018 +0800

    Add TensorBoard histogram support (#58)

    Allows users to log histograms to TensorBoard using the new record_histogram API.

    This PR also starts organizing TensorBoard outputs into their own class.

[33mcommit 1cc419fb7713f3c3ca572cc856ec55fb9950f5bc[m
Author: Hejia Zhang <hjzh578@gmail.com>
Date:   Tue May 29 17:56:09 2018 -0700

    Add robot interface (#101)

    Add an abstrct robot interface so that people can use and add different robot more easily and unified.

[33mcommit 2e5529524e9f838e9f82f8238313557217c67f6b[m
Author: Jonathon Shen <jonashen@users.noreply.github.com>
Date:   Tue May 29 17:03:15 2018 -0700

    Refactor rllab from rllab.mujoco_py to mujoco_py (v1.5.0) (#91)

    In this change, rllab is updated to use the latest version of MuJoCo
    (i.e. v1.5.0) by replacing all applications of rllab.mujoco_py in the
    code with mujoco_py, and subsequently remove the rllab.mujoco_py folder.
    This also updates the setup_mujoco.sh script to support installation
    using MuJoCo v1.5.0 in lieu of v1.3.0. Most changes are minor, such as
    replacing applications of self.model with self.sim due to MuJoCo
    transferring functionality from model to sim in the new version.
    Instead, sim is instantiated by passing a reference to model: self.sim =
    MjSim(self.model).

    However, some changes are major, most notably embedded_viewer.py and
    gather_env.py. Many functions within these files were using deprecated
    APIs that did not have a direct and easy complement in the new MuJoCo
    documentation. Some of these functions were renamed, others were moved
    around underneath new or pre-existing classes under a new guise, and
    others were most likely removed. These files are not as of now
    rigorously tested, but no major functionality has been broken thus far,
    and so can be used tentatively.

[33mcommit 49e750500d6169db6592a67e9b8edb35a45292df[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Fri May 25 17:51:39 2018 -0700

    Fix missing imports and other small errors (#99)

    1. Add missing imports and optimize imports.
    2. Delete duplicate parameter name.
    3. Delete duplicate parameter initialization.

[33mcommit 4d2417e93598d0effba91f5a3c4eba03334b64ac[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Fri May 25 17:10:30 2018 -0700

    Support for tensor logging to tensorboard (#88)

    Add a customized tensor scalar to tensorboard by using the
    custom_scalar plugin in tensorboard. Each line in the scalar
    corresponds to an element in the tensor.

    Wrap the tensorboard logging module into a new class `Summary`
    in file rllab/misc/tensor_summary.py. It supports both the
    simple value and tensor logging. It also saves the
    computation graph created by rllab.

    To record the tensor into tensorboard, use the
    `record_tensor` function in file rllab/misc/logger.py.

    Refer to: #39, #38

[33mcommit 5c42053fcd6821eb39eded56526cfe5f2070418a[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Fri May 25 14:41:41 2018 -0700

    Add variable scope to symbolic operations using TensorFlow (#72)

    Add variable scope to symbolic operations using TensorFlow

    A variable scope facilitates the reading of a TensorFlow graph by
    grouping tensor objects in hierarchies.

    In rllab, the hierarchies are defined with primitive objects and
    symbolic operations, where the latter is a member function of a
    primitive.

    In this change, the primitives are the algorithms, networks,
    distributions, optimizers, policies, Q-functions and regressors.

    An example of a primitive is the DiagonalGaussian class, which
    implements a probability distribution, and the symbolic function is
    kl_sym, which implements the Kullback–Leibler divergence. The idea of
    implementing the variable scope is that all the tensor operations in
    kl_sym are encapsulated within the hierarchy DiagonalGaussian/kl_sym.

    Each primitive and symbolic function have the parameter "name", which
    has a default value equal to the primitive or symbolic function name,
    but developers can set those parameters as they may find more
    convenient, so the previous example could be changed to be:
    distribution/divergence.

    A context class was added to the file tensor_utils.py to verify if the
    variable scope of the corresponding primitive is already set, in order
    to set it in case it's not, and remove it once the symbolic function is
    exiting.

    The only caveat with variable scopes is that they work based on the call
    stack and not with a class or file scope, so even if the same scope is
    used in two different call stacks, TensorFlow adds an index to the
    primitive or symbolic function names to make each scope unique.
    Therefore, not all symbolic operations performed in a primitive will
    appear under the same primitive scope, but they will be split in
    different instances of the primitive scope (e.g. DiagonalGaussian and
    DiagonalGaussian_1).

[33mcommit 3ddb23d829b684fdb0967bfd9c55cfbb7e5ab4f4[m
Author: cjcchen <ickchenjunchao@gmail.com>
Date:   Sat May 26 03:02:33 2018 +0800

    Upgrade Theano to 1.0.1 (#65)

    Upgrades Theano to 1.0.1

[33mcommit 758636562b2ea1d72a397506a4e4d5d2ccc1201e[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Wed May 23 15:57:31 2018 -0700

    Remove convenience imports that generate circular dependencies (#87)

    When the convenience imports were introduced, they accidentally created
    a circular dependency was  between packages.

    To avoid future crashes, an analysis of the code imports was performed
    to find all the circular dependencies in rllab. We found no no circular
    dependencies in the TensorFlow tree, or between packages in the
    TensorFlow and Theano tree. There were circulater dependencies in the
    Theano tree.

    Circular dependencies in the Theano tree are the following:
    - The package misc with algos, baselines, core, and viskit.
    - The package algos with sampler

    Since misc shares so many circular dependencies, conflicting imports
    were removed from its file __init__.py.

    Regarding algos and sampler, the issue is generated by imports in
    sampler in its file __init__.py, so they were removed as well.

    Due to these removals, some imports had to be restored to its previous
    long package path.

[33mcommit dd3c968da7ac022651d40db59b4aa9c4e3fed147[m
Author: Hejia Zhang <hjzh578@gmail.com>
Date:   Tue May 22 18:44:49 2018 -0700

    add gazebo sawyer (#49)

    Design the ros environment support for rllab. Add sawyer simulation support and gazebo environment support.

    Refer to: #49

[33mcommit d49f0398d823c55260d74078c455621d4a2b4bc4[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Tue May 22 18:34:20 2018 -0700

    Fix error in Theano when using GPU and TF

    The configuration of the GPU device in Theano is set if USE_TF is false and USE_GPU is true. Since USE_TF is only set to True when using AWS EC2, it's now also set as a parameter in the run_experiment_list function.
    To avoid the conflict with Theano when using TF and GPU, set both use_tf and use_gpu to True when calling run_experiment_list.
    To enable and disable GPU with TensorFlow, an if statement was inserted to make the GPU invisible when use_gpu=False.
    Also, an environment variable for use_tf for non-local modes such as local_docker or EC2 was added if it's required to switch between Theano and TensorFlow.
    Finally, the corresponding documentation was added in experiments.rst and the script instrument.py was formatted with PEP8 using YAPF.

[33mcommit 0075a6b8427530acc3eab6ff59016ef4e0f53be6[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Tue May 22 18:11:38 2018 -0700

    Import classes and modules in __init__.py of each package (#66)

    Imports classes and modules in the __init__.py of each package to make
    package-level imports shorter.

[33mcommit bb2475f65ddae62c020c647f87634c5971014c1d[m
Author: Chang Su <CatherineSue@users.noreply.github.com>
Date:   Tue May 22 15:14:15 2018 -0700

    Support std_share_network in all GaussianMLP* classes (#69)

    Implement std_share_network architecture in the GaussianMLP*
    classes of TensorFlow.

    The std_share_network creates a single neural net with output
    length of 2 * action_dimension. The first half output params
    are the means params, and the second half params are the
    log_std params.

    As a result, the GaussianMLP* classes can support a new
    architecture.

    Refer to: #44

[33mcommit 92c41f3734870f9772b36ed64049ca8d0fbb5e5b[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Tue May 15 23:27:59 2018 -0700

    Cleanup list of dependencies in conda environment (#56) (#60)

    It was verified that each of the dependencies removed were not
    imported or had any package dependants in rllab.
    The new environment file was tested with a fresh copy of the
    rllab project by running the setup_linux script, and with the
    training of the swimmer in Theano and cartpole in TensorFlow
    with plot=True.
    The channels of the removed packages were discarded as well.

[33mcommit 7a4dbb71001403e713e98d6ce0f9a660c61b91f1[m
Author: Angel Ivan Gonzalez <35857569+gonzaiva@users.noreply.github.com>
Date:   Thu May 10 14:12:38 2018 -0700

    Add TensorFlow GPU v1.8 during the setup of the virtual env (#9) (#59)

    The selection of the regular TensorFlow package or GPU-
    accelerated TensorFlow was added into the setup_linux
    script.
    Although no error is produced if both packages are installed,
    the GPU package won't work if the regular package is installed
    as well. Therefore, both packages were removed from the conda
    environment file.
    In the setup_linux script, the selection of the TF package is
    done after the environment is created, leaving the regular
    release as the default package. Two guards were added for the
    creation and update of the conda environment to verify if their
    execution was successful or else exit the script with an error
    message.
    The TF version was set to 1.8 which is the most recent release
    that works for both the GPU and regular version.
    As a side note, the prettytensor package removed from the conda
    environment has the regular TF package as a dependency, and
    prettytensor is currently not used in the rllab project, so
    it was replaced by the selection of the regular TF package
    in the setup script.

[33mcommit b15d069bd9088a806391a4b6bbb1f4c9dd51da42[m
Author: cjcchen <ickchenjunchao@gmail.com>
Date:   Tue May 1 04:50:58 2018 +0800

    Add support for dm_control environments (#48)

    Adds a support for training against [dm_contro](https://github.com/deepmind/dm_control) environments, and an associated viewer.

    dm_control doesn't support direct 3D rendering yet (only pixels), so we feed the pixels to a pygame window.

[33mcommit 0b2776b93f62b87c923e9e86b11aede0667aac09[m
Author: cjcchen <ickchenjunchao@gmail.com>
Date:   Fri Mar 30 20:31:11 2018 -0700

    Add TensorBoard Support

    Adds TensorBoard support for basic key-value pairs. Anything logged via
    `logger.record_tabular()` is also available via TensorBoard.

[33mcommit 2cf515cd47c904d560e613650d4a7c1086f82e56[m
Author: Ryan Julian <rjulian@usc.edu>
Date:   Tue Mar 27 14:32:23 2018 -0700

    Protect StatefulPool from class methods

    StatefulPool doesn't support batching over with class methods because it
    always passes `G` as the first argument to the worker function. If one of the
    `run_` methods in StatefulPool is called with a class method it can lead to
    a silent lock-up of the pool, which is very difficult to debug.

    Note: this bug does not appear unless n_parallel > 1

[33mcommit 4694327875be9557fe1a7f805f23112bf223541a[m
Author: Ryan Julian <rjulian@usc.edu>
Date:   Tue Mar 27 14:52:23 2018 -0700

    [travisci] Correct changed file detection

[33mcommit 4fa6bffb59207de3f4de522e46e8deeaf5d51970[m
Author: Ryan Julian <rjulian@usc.edu>
Date:   Sun Mar 25 15:14:19 2018 -0700

    TravisCI support

[33mcommit 1f3f06a586233af80850de42fb9e99536162ba7e[m
Author: Ryan Julian <rjulian@usc.edu>
Date:   Tue Mar 20 14:23:22 2018 -0700

    [tf] Symbolic entropy for DiagonalGaussian

[33mcommit 4eb1e164dfb91535963627365f865499773f4997[m
Author: Ryan Julian <rjulian@usc.edu>
Date:   Thu Mar 8 16:26:23 2018 -0800

    Remove chainer from enviroment.yml

    chainer setup is broken (on Ubuntu 16.04, at least), and the chainer
    devs direct users to newer versions, because v1.18.0 is unsupportted.
    See https://github.com/cupy/cupy/issues/886.

    I can find no actual dependencies to chainer in the main rllab repo. If
    someone has some downstream code with a hard chainer dependency,
    they're welcome to submit a (working) PR to add it back in.

[33mcommit 3ae055a5c09cd2b87720bb87a7c9f79777797e74[m
Author: Ryan Julian <rjulian@usc.edu>
Date:   Thu Feb 8 15:41:19 2018 -0800

    Set window context before rendering in MjViewer

    This is needed for using more than one MjViewer at a time

[33mcommit 6b7f6fb32782e50f3c2b33406e2bdce03e9a65f7[m
Author: Ryan Julian <rjulian@usc.edu>
Date:   Thu Feb 8 15:34:51 2018 -0800

    Add window title parameter to MjViewer

[33mcommit b3a28992eca103cab3cb58363dd7a4bb07f250a0[m
Author: Daniel Marta <daniellsmarta@gmail.com>
Date:   Mon Nov 20 07:31:30 2017 +0000

    Setup fix (#186)

    * setup_fix

    * fix setup

[33mcommit 9adb7e61e88addcd965fabb683b010c832d72a25[m
Author: Aishwarya Unnikrishnan <shwarya.unnikrishnan@gmail.com>
Date:   Mon Nov 20 13:01:17 2017 +0530

    Correct actor learning rate (#181)

    According to the original DDPG paper, it's 1e-4.

[33mcommit 23d69cd62b38a8c5040936fa06dbe656a0d364b9[m
Author: inksci <inksci@qq.com>
Date:   Mon Nov 20 15:29:55 2017 +0800

    install mujoco-v0.5.7 from source (#191)

    Install mujoco_py with pip install mujoco_py always make error. A better way is installing it from the source code.

[33mcommit b2d1e3d90d8bee76f9dbae64fda31f72f2f1c325[m
Author: Gunjan Baid <gunjanbaid@users.noreply.github.com>
Date:   Sun Nov 19 23:29:42 2017 -0800

    Fixed typo in docs. (#192)

[33mcommit 088c1be8d7abcea7609e143d66f41fcd969ffa0f[m
Author: Aman Soni <git+me@amansoni.com>
Date:   Mon Nov 20 07:29:19 2017 +0000

    Update installation.rst (#196)

    Added install to the apt-get command for linux

[33mcommit 1849b87ae82496bd761813329c5ba051dcca8a2e[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Nov 19 14:56:49 2017 -0800

    fix b2vec issue

[33mcommit 82a1499783ede1f2a0894de524df92a931a86e77[m
Author: haarnoja <haarnoja@users.noreply.github.com>
Date:   Tue Jul 18 17:37:22 2017 +0100

    Fix bug with positional arguments in Serializable. (#173)

[33mcommit 85a2ca2e973b082b7efed08f8cda325a51f5c39d[m
Author: John B Nelson <jnelso11@gmu.edu>
Date:   Fri Jun 23 09:22:24 2017 -0700

    FIX example path and code block in documentation (#159)

[33mcommit 393be079b8304589a28550d27a948239b48957f2[m
Author: ViktorM <victor.makoviychuk@gmail.com>
Date:   Thu Jun 8 01:31:12 2017 +0300

    Fixed mistypes in hidden layers sizes in TRPO examples (#149)

[33mcommit 6d7df9dddb94e6e471ea3962f838c4edb13680a3[m
Author: Mickaël Fourgeaud <mfourgeaud@gmail.com>
Date:   Wed Jun 7 22:30:08 2017 +0000

    Added zlib dependency required by atari-py (#152)

[33mcommit 5813de80614599c1e0322db7db13690162cb5ddc[m
Author: Vitchyr Pong <vitchyr@gmail.com>
Date:   Fri Jun 2 22:08:18 2017 -0700

    Make eval safer from XSS attacks (#142)

    * Fix Gaussian RNN implementations

    * fix import of deprecated class

    * Use last gym release

    * Make frontend safer from XSS attacks

[33mcommit 6b2489e694576933332ef7535709193689452d2f[m
Author: Vitchyr Pong <vitchyr@gmail.com>
Date:   Fri Jun 2 22:07:47 2017 -0700

    Fix lstm peepholes (#143)

    * Fix Gaussian RNN implementations

    * fix import of deprecated class

    * Use last gym release

    * Make peepholes usable for GaussianLSTMPolicy and LSTMLayer

[33mcommit bbd1563ba7fecd0fc8efda903af161e025eb5596[m
Author: Peter Henderson <Breakend@users.noreply.github.com>
Date:   Sat May 13 14:24:53 2017 -0400

    Add ability to zip up an arbitrary amount of code folders when sendin… (#136)

    * Add ability to zip up an arbitrary amount of code folders when sending to ec2 instances.

    This is the beginning of some changes so that we can package rllab as a library which
    can be used externally. Now, you can have an arbitrary repository with your own
    algorithms and can run something like:

    run_experiment_lite(
        algo.train(),
        log_dir=None if args.use_ec2 else args.data_dir,
        # Number of parallel workers for sampling
        n_parallel=1,
        # Only keep the snapshot parameters for the last iteration
        snapshot_mode="last",
        # Specifies the seed for the experiment. If this is not provided, a random seed
        # will be used
        exp_prefix="myexperiments",
        seed=1,
        mode="ec2" if args.use_ec2 else "local",
        plot=False,
        # dry=True,
        added_project_directories=[osp.abspath(osp.join(osp.dirname(__file__), '.'))]
    )

    This will include your current project directory and send it to EC2 as if it's in the root dir of rllab.
    Hence you can include your own libraries and run them without working in the rllab repo.

    * Fixing tar-ing of extra directories for s3/ec2 upload

[33mcommit 51011b2763c03668a9106244a8b7dd17ca48fd40[m
Author: Dr. Kashif Rasul <kashif.rasul@gmail.com>
Date:   Sat May 6 00:46:07 2017 +0200

    don't import lasagne (#135)

[33mcommit 38a2a4135fa401c22d5add8dc6f96ee138a0b174[m
Author: Peter Henderson <Breakend@users.noreply.github.com>
Date:   Wed May 3 23:39:21 2017 -0400

    Add CategoricalConvPolicy to TF sandbox to align with Theano implementation (#133)

[33mcommit 6be5750ef08df7682ceb90cc84d6a3faa90be924[m
Author: Peter Henderson <Breakend@users.noreply.github.com>
Date:   Tue May 2 17:50:26 2017 -0400

    Add Q-Functions and Deterministic MLP Policy to align with Theano implementation. (#131)

    This puts us on a path to port DDPG from Theano to Tensorflow.

[33mcommit 7cc2c95a8358c5556c771c98860b34209b804c28[m
Author: sytham <matthijs.snel@gmail.com>
Date:   Tue May 2 23:50:08 2017 +0200

    Fixes #128 (#129)

    * Fixes #128.

    * using nan as fillvalue

[33mcommit 6d6b8ad0d683a24a1c00b9224a55471c353201ed[m
Author: Brandon Amos <bdamos@vt.edu>
Date:   Mon May 1 21:02:06 2017 -0400

    run_experiment_lite: Mention the gap snapshot mode in the help string. (#130)

[33mcommit 7f632c97c936b7658bc04b7957e46ccda262b8fa[m
Author: sytham <matthijs.snel@gmail.com>
Date:   Tue Apr 25 21:53:41 2017 +0200

    Wrapper env for sensor occlusion (#122)

[33mcommit a6def4531522cb98a47daf13148c0d7605c6cf8e[m
Author: sytham <matthijs.snel@gmail.com>
Date:   Tue Apr 25 21:53:22 2017 +0200

    Hilly envs of variable difficulty, and 3D swimmer env (#121)

[33mcommit d33f17ee43f0ad2c94aa51ca93ebb5ed6de692a9[m
Author: sytham <matthijs.snel@gmail.com>
Date:   Mon Apr 24 09:35:46 2017 +0200

    Enable multiple rollouts per CEM sample eval through new n_evals kwarg (#120)

[33mcommit 0cb400459191f2e3fab0261edc30ec17b73a8335[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Fri Apr 21 13:34:11 2017 -0700

    more fixes

[33mcommit 0a784e16f78359f7da7f52b7e34d63aea7366a18[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Fri Apr 21 13:32:52 2017 -0700

    fix

[33mcommit 8188f6b5b5a82ad8508266ce75cc41d2ecd05be3[m
Author: Yang Song <yang-song@users.noreply.github.com>
Date:   Thu Apr 20 21:27:29 2017 -0700

    Fix the url to tlatorre (#118)

    Change https://conda.binstar.org/tlatorre to https://conda.anaconda.org/tlatorre

[33mcommit c23069656ebbc0e390859dca2e4587499072af8e[m
Author: Rocky Duan <dementrock@users.noreply.github.com>
Date:   Wed Apr 19 16:34:18 2017 -0700

    Update setup_ec2_for_rllab.py

[33mcommit ae4270453c6b2a83d6b1211f0a2d5361624e9f7c[m
Author: Hyun Oh Song <rksltnl@users.noreply.github.com>
Date:   Wed Apr 19 15:35:13 2017 -0700

    Temporary fix to enable rendering in tensorflow batch_polopt.py. Does synchronous rendering after every episode. (#117)

[33mcommit 0ba0986287c2ac749ed1d742ca1b3f64b7c2ae7a[m
Author: Peter Henderson <Breakend@users.noreply.github.com>
Date:   Sun Apr 16 19:07:55 2017 -0400

    Add custom sessions to algo.train(..) for tensorflow sandbox. (#109)

    * Add custom sessions to algo.train(..) for tensorflow sandbox.

    This addresses and issue where you lose the session params after
    (for example you cannot run aglo.get_action(..) as the session
    is created internally to the train method). This is a fix that is
    replicated from @bstadie's third_person_im code:

    https://github.com/Breakend/third_person_im/blob/master/sandbox/rocky/tf/algos/batch_polopt.py

    * Adding session close if created to batch_polopt training

[33mcommit 368ae2865df79c5ecbee7369e9fa7f0f3f0a1a77[m
Author: sytham <matthijs.snel@gmail.com>
Date:   Sat Apr 15 23:52:34 2017 +0200

    Make Parameterized Serializable (#115)

    * Initial commit

    * Some additional explanatory comments

    * Fixes issue #111

    * Fixes #113

[33mcommit 349e6033a2f1f441bf38b1b3e0277d0dab643dad[m
Author: sytham <matthijs.snel@gmail.com>
Date:   Fri Apr 14 20:53:51 2017 +0200

    Run hyperparameter search using hyperopt on EC2 (#110)

    * Initial commit

    * Some additional explanatory comments

[33mcommit 2d080551a6beddc7f145ec19b7c3fec2b46a8fbb[m
Author: sytham <matthijs.snel@gmail.com>
Date:   Fri Apr 14 20:47:43 2017 +0200

    Fixes issue #111 (#112)

[33mcommit 2387f4cc27e798e5a7bd39c8e35b3976e9430269[m
Author: Peter Henderson <Breakend@users.noreply.github.com>
Date:   Sat Apr 8 04:31:42 2017 -0400

    Splitting trpo_gym examples into two different examples using differe… (#106)

    * Splitting trpo_gym examples into two different examples using different policies.

    For beginners using rllab it is unclear why an exception is thrown for the trpo_gym
    example. It seems as though it should work as is. By splitting it up, we are help
    guide beginners in understanding why different policies are needed and which ones
    can be used for which environments.

    * Add tensorflow sandbox example using a Gym environment

[33mcommit d5f09d9b7d7f651678ce8cfc8f661e11ae7dfaf7[m
Author: John Co-Reyes <jdcoreyes@gmail.com>
Date:   Tue Mar 28 21:35:41 2017 -0700

    Upgrade to Tensorflow 1.0.1 (#104)

[33mcommit 731eb32079e86ab0ee447788f32745ad893e517e[m
Author: Vitchyr Pong <vitchyr@gmail.com>
Date:   Tue Mar 28 21:35:13 2017 -0700

    Fix _Monitor import reference (#98)

    * Fix Gaussian RNN implementations

    * fix import of deprecated class

    * Use last gym release

[33mcommit 10b7566844477808c87caebd649146e2789d1003[m
Author: Carlos Florensa <florensacc@users.noreply.github.com>
Date:   Fri Mar 24 19:01:55 2017 -0700

    Compatibe snn4hrl (#100)

    * add placement to misc_stat

    * add **kwargs

    * ProxyEnv gather

    * add contruct_maze, get_ori()

    * add rgb_array render (for video)

    * fix Serialize

    * new utilities

    * get_ori from wrapped

    * get_ori in robot

[33mcommit ac70203fa500563c9ec3b0d0da90de91f1777e8b[m
Author: Vitchyr Pong <vitchyr@gmail.com>
Date:   Tue Mar 14 21:45:42 2017 -0700

    Fix serialization bug 3 14 (#97)

    * Fix Gaussian RNN implementations

    * Swap if-else statement to be correct

    * also support type annotations on load

[33mcommit 548e7a392f07c7fd1b9eb602cb96c27198e59773[m
Author: Vitchyr Pong <vitchyr@gmail.com>
Date:   Fri Mar 10 00:30:58 2017 -0800

    Cache env spec and space (#92)

    * Fix Gaussian RNN implementations

    * Cache env_space and spaces to speed up performance

[33mcommit 3c9f01669e07626430fd3ca0f00a0684d8f47e23[m
Author: Vitchyr Pong <vitchyr@gmail.com>
Date:   Fri Mar 10 00:29:58 2017 -0800

    Support Type Annotations if using Python 3.0+ (#95)

    * Fix Gaussian RNN implementations

    * Use getfullargspec if using Python 3

    getargspec is deprecated in Python 3 and doesn't support type annotations.

[33mcommit ad7ce6a22264007b78ea27facafac480b0e6a617[m
Author: Vitchyr Pong <vitchyr@gmail.com>
Date:   Sat Mar 4 22:39:29 2017 -0800

    Fix Gaussian RNN implementations (#90)

[33mcommit 3b08f770d5349f71d262930002dd5558066cc787[m
Author: Vitchyr Pong <vitchyr@gmail.com>
Date:   Sat Mar 4 22:39:11 2017 -0800

    Add option to always return the paths even if animated is True. (#91)

[33mcommit fa4817d174eae1a0034e36deb39a6595f2155be9[m
Author: Vitchyr Pong <vitchyr@gmail.com>
Date:   Tue Feb 28 15:11:59 2017 -0800

    Add default get_param_values and set_param_values (#84)

    Can assume that environment has get_param_values

[33mcommit a9cfd476e5651e3ad597e6800e86e790e4cafc84[m
Author: bichengcao <bicheng.cao@gmail.com>
Date:   Wed Mar 1 10:11:41 2017 +1100

    Fix submit_gym.py to not load params.json since it no longer exists. (#86)

    * Fix submit_gym.py to not loading params.json since it's no longer exists.

    * Replace timestep_limit in gym_env since it was deprecated in openai/gym.

    * import logging before use

    * Add logging for observation space and action space.

    * Add a contrib folder for bichengcao, which includes example for gym CartPole-v0.

    * Add example for gym CartPole-v1.

    * Add an template for gym MountainCar-v0, which doesn't solve the problem.

    * Add example for gym Pendulum-v0.

    * Add example for gym Acrobot-v1.

[33mcommit 2659acc1eb6e8f4c9e085fbb9738b683906b8b71[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Feb 26 14:07:45 2017 -0800

    updates

[33mcommit d95943b3b1e6982b9a759eb9c46359a884303c90[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Fri Feb 10 22:10:25 2017 -0800

    update

[33mcommit 0e3ef9ef99392ecf2375f9b67fc746de513cb8ab[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Tue Feb 7 01:04:17 2017 -0800

    fix gym version

[33mcommit 6311bf790f00022f1963f02fc7a332875b07efca[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Mon Feb 6 21:43:14 2017 -0800

    fix

[33mcommit 332b3cedfa96d44ff7b5bc7019f95b97a208c3e5[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Mon Feb 6 21:31:21 2017 -0800

    update

[33mcommit 78e0a9482dc950338a59089bdf86994034c0f462[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Mon Feb 6 20:12:58 2017 -0800

    tf fix

[33mcommit 5271567086bf9d13c15c899859cefb8d0ea2663e[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Mon Feb 6 14:31:01 2017 -0800

    reduce dependency on gym inner modules

[33mcommit ecaad6b9cbcd8003663d703a560437f71015554e[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Feb 5 22:54:23 2017 -0800

    fix

[33mcommit ff5f07352108977e90390d38bb919d735ee844a7[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Jan 22 23:25:54 2017 -0800

    update AMIs

[33mcommit 3e5fde40c1db222c62fe2134bf087865c101f7f6[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Jan 22 12:26:12 2017 -0800

    fix doc

[33mcommit 937a95cbd0b95d9c69006ed636715a44e32ffd17[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Jan 22 12:16:25 2017 -0800

    instrument & doc updates

[33mcommit 989e225815385079c88c5de9102a822ba9b427c2[m
Author: Rocky Duan <dementrock@users.noreply.github.com>
Date:   Mon Jan 16 15:39:11 2017 -0800

    Update gaussian_strategy.py

[33mcommit 142b68ddb907f4b3c7e50b4f2299127296d7ce74[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sat Jan 7 12:14:09 2017 +0800

    fix gym env

[33mcommit c226bd8e0ffa0c106f961d97285431d89b97e4de[m
Author: chang cheng <myairia@gmail.com>
Date:   Wed Nov 30 05:00:56 2016 +0800

    [SMALLFIX] Make it able to continuously run policy simulation (#61)

    * Make it able to continuously run policy simulation.

    * Clean up.

[33mcommit 8446e05664374e262df16fac6d6306135577c3fe[m
Author: Paul Hendricks <paul.hendricks.2013@owu.edu>
Date:   Tue Nov 29 15:58:38 2016 -0500

    added basic setup.py (#62)

[33mcommit 72bfaca20beceaae3217c09766e318c68fe118d2[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sat Nov 12 16:42:58 2016 -0800

    fix

[33mcommit 4fd25fe7a31388fed3e005c86bee9b1c75e4df1d[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sat Nov 12 13:01:32 2016 -0800

    override gym env constraint

[33mcommit 86fc7bb368d8142f4b93cf9bd05ed5241a26b4f6[m
Author: lchenat <lchenat@connect.ust.hk>
Date:   Fri Nov 4 08:03:50 2016 +0800

    fix angle calculation for free_joint (#54)

    * fix angle calculation for free_joint

    * angle again

    * fix angle

[33mcommit 7b3a6addd4f90a02c4692be126f18c5de1b1b7dd[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sat Oct 22 13:07:54 2016 -0700

    fix using gym mujoco

[33mcommit 7e7f0e7e889390f1caa00b028971ec39c7bbad0c[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sat Oct 22 12:08:40 2016 -0700

    update example

[33mcommit 3200d8f5d2ae55ad95f1cd56eeb71a7574751ab8[m
Author: Rocky Duan <dementrock@users.noreply.github.com>
Date:   Sat Oct 22 12:00:13 2016 -0700

    Update cluster_demo.py

[33mcommit 419af3acfd16b71ba3f5c54e30b9d300b91ced8d[m
Author: Rocky Duan <dementrock@users.noreply.github.com>
Date:   Fri Oct 21 18:33:28 2016 -0700

    Update setup_ec2_for_rllab.py

[33mcommit 55b7df1382d09e047a4f3c3865c519ef8fd5941b[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Tue Oct 18 21:25:18 2016 -0700

    fix random policy

[33mcommit 3e1d630d1b3fcf02a96138acdb831b23ee281026[m
Author: Rocky Duan <dementrock@users.noreply.github.com>
Date:   Sun Oct 16 21:20:28 2016 -0700

    Update README.md

[33mcommit 520df9641d3f076b5ec33350e45ad23c87d54783[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Oct 13 16:04:27 2016 -0700

    fix test

[33mcommit 3eedaaef8ec3073d64031ade236daa443d74e3cd[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Oct 13 15:58:15 2016 -0700

    improve tf serialization

[33mcommit 9081c007b26b03ef9f8086be0a2eda6717f0c8b6[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Oct 6 01:11:48 2016 -0700

    fix

[33mcommit fc554907aac1799e2f6627bcc165b267ed980220[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Oct 2 15:18:58 2016 -0700

    fix readme

[33mcommit e9365c0ac8d1cf61a0816b00876964d4c863b55f[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Oct 2 14:21:35 2016 -0700

    update attribution

[33mcommit 5576d82ce8d6f312087b5cd0efdfe30aef690e5e[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Oct 2 14:16:16 2016 -0700

    improve instruction

[33mcommit 35d6a20468f91804fec7905cfd4f099cb5775375[m
Author: OpenAI server <sys@openai.com>
Date:   Thu Sep 29 23:36:36 2016 -0700

    fix again

[33mcommit 74c048f78091be48c43678600408b492f9ac1127[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Sep 29 20:59:59 2016 -0700

    fix tests & improve docs

[33mcommit 87c8729d98b93fc00e5639bd704c59930b34612b[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Sep 29 17:16:03 2016 -0700

    minor fixes

[33mcommit bad3eac2145018ff01aa34a6c832ceeaa8eb718f[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Sep 29 17:10:05 2016 -0700

    fix readme

[33mcommit 29c06c2ec8b9cc7ac2a4f4bf5cd4f130f1e69d4b[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Sep 29 17:06:18 2016 -0700

    updates

[33mcommit ee24b5c4ee422f38a8e8d329a55117a59de9a699[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Sep 29 12:30:27 2016 -0700

    attempt fix

[33mcommit 1cf6a74a492111d87796ae9edf27776af6c3ffd9[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Sep 29 11:56:32 2016 -0700

    add py3 notice

[33mcommit 8d6c52d7a909fcedddf809999ebf40dcf5348715[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Sep 29 11:53:51 2016 -0700

    attempt fix circleci

[33mcommit 872511883f1c415bb933e612a2a5b622c56be9b2[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Sep 29 11:49:51 2016 -0700

    sync up

[33mcommit a03bb2c9e5f052a63b15f843bc6938c5b70da1a2[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Sep 29 11:35:35 2016 -0700

    sync tf updates

[33mcommit 728579079eda4f537bab76049823da67ffeaba4d[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sat Sep 3 21:51:59 2016 -0700

    update config file

[33mcommit 43275a9497100202399ecafb1a368d077ac9b5c6[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sat Sep 3 21:50:36 2016 -0700

    update instrument file

[33mcommit baf962aad20f7f9bb95ca44a47c70889cdeb1b02[m
Merge: 8af8dcf d8239c0
Author: (Peter) Xi Chen <neocxi@users.noreply.github.com>
Date:   Wed Aug 17 23:22:58 2016 -0700

    Merge pull request #38 from zhongwen/master

    Make sandbox and sandbox/rocky modules

[33mcommit d8239c05179fcc55d865db7ce933defa3baae24d[m
Author: Zhongwen Xu <zhongwen.s.xu@gmail.com>
Date:   Wed Aug 17 22:29:00 2016 +1000

    fix cannot import sandbox when using sanbox/rocky/tf/launchers/*.py

[33mcommit 8af8dcf1e3944d18e1731dc05ef968656b977a50[m
Merge: 237b503 a086475
Author: (Peter) Xi Chen <neocxi@users.noreply.github.com>
Date:   Sun Aug 14 15:40:42 2016 -0700

    Merge pull request #36 from davheld/master

    Adding required version number to joblib

[33mcommit a0864753155c7dcac41828d666bea47b84e3f4c4[m
Author: David Held <davheld@eecs.berkeley.edu>
Date:   Sun Aug 14 15:35:00 2016 -0700

    Adding required version number to joblib

[33mcommit 237b50357ef4f8d18fb3f8490ddefd6907e1bb97[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Aug 7 11:27:49 2016 +0800

    initia import of tf experimental code

[33mcommit 7cd708847357a9bfb662b5a86545da6c4ea722b9[m
Author: Alex Beloi <alexbeloi@users.noreply.github.com>
Date:   Wed Jul 13 15:03:21 2016 -0700

    add: options for thresholding and pretraining in ISSampler (#30)

    * bugfix: sample_isweighted_paths returns correct paths now

    * add: options for thresholding and pretraining in ISSampler

    * fix: thresholding parameters default to no threshold

[33mcommit a8b353bde33c0d0a80c49e5d616ccafa36c2ddc2[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Fri Jul 8 11:18:04 2016 -0700

    do not throw error when normalizing environments with discrete actions

[33mcommit fb7502612ccc6c92de8a37e2550625df6a2a96ba[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Jul 7 12:38:31 2016 -0700

    do not subtract mean when normalizing reward

[33mcommit de0a478c21879bd3eadd11928af5fe0281a6a21c[m
Author: Alex Beloi <alexbeloi@users.noreply.github.com>
Date:   Thu Jul 7 11:07:11 2016 -0700

    bugfix: sample_isweighted_paths returns correct paths now (#28)

[33mcommit 0c183a74c9a1deb213b5ad4f4987fc8e79f4ab27[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sat Jul 2 17:03:34 2016 -0700

    resumable experiments

[33mcommit 327446a061e53a91f1e56a4dd49a9cc7593fc1de[m
Author: singulaire <tomblau@gmail.com>
Date:   Fri Jul 1 15:27:32 2016 +1000

    add flattening logic so ddpg can handle image observations (#23)

    * add flattening logic so ddpg can handle image observations

    * move flattening logic to DeterministicMLPPolicy

    * remove unnecessary flattening

[33mcommit c68aaf4128710a562320cb0116f4334a1fa814b7[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Jun 23 17:58:02 2016 -0400

    touch

[33mcommit d534a77ac6076bbe6df7b8a9afa636d816003d95[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Jun 23 17:57:06 2016 -0400

    rearrange

[33mcommit 163b58fd62565cd10d6c34176d9f5c8184c0b3c2[m
Merge: 25f38dc 8d2e347
Author: Rocky Duan <dementrock@users.noreply.github.com>
Date:   Thu Jun 23 17:55:12 2016 -0400

    Merge pull request #21 from alexbeloi/importance_sampling

    ISSampler class for Importance sampling

[33mcommit 8d2e3475cf7e4b31f5db397217875a50cf8e9cfa[m
Author: Alex Beloi <a.beloi@samsung.com>
Date:   Thu Jun 23 11:38:55 2016 -0700

    update: optimize ISSampler by storing dist (@hrtang)

[33mcommit cd651176036b4be1ac433e2b07c83c116918ad22[m
Author: Alex Beloi <a.beloi@samsung.com>
Date:   Thu Jun 23 11:19:57 2016 -0700

    add: ISSampler class for importance sampling

[33mcommit 25f38dc9fb74daae107a054219668e06a3e24944[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Jun 23 12:50:38 2016 -0400

    fix

[33mcommit 4fdbc2db3c580de252cf962d4b3d3810cf90be97[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Tue Jun 21 23:10:45 2016 -0400

    add empty contrib folder

[33mcommit ae95b1aec128ea199caa251405d49da26b68344a[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Tue Jun 21 23:03:27 2016 -0400

    make the sampler more modular

[33mcommit 34cbcfffdd8b58dff2f94a229742e8bc9e04f3ba[m
Author: Rocky Duan <dementrock@users.noreply.github.com>
Date:   Tue Jun 21 00:44:24 2016 -0400

    Update README.md

[33mcommit c879297a60b4a226e5b9536269c302d77e886220[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Tue Jun 14 14:37:40 2016 -0700

    update dependencies

[33mcommit 5f636b3adbe3665a5864a06b34d7eaa410182cd0[m
Author: Rocky Duan <dementrock@users.noreply.github.com>
Date:   Fri Jun 10 23:41:13 2016 -0700

    Update README.md

[33mcommit ccd79f656d521037be517cb5e7a1b653f37dc46f[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Wed Jun 8 20:13:18 2016 -0700

    update from upstream

[33mcommit e85db07539c8c423dc587a4c82fd2f3adec14a36[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Fri Jun 3 23:14:40 2016 -0700

    fix cartpole plotting

[33mcommit 4362ad2e26dd99137cbe6e6804137bdd4034a3e3[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Fri Jun 3 22:54:14 2016 -0700

    fix ddpg plotting; add sample run script for ddpg

[33mcommit 87722d6645f1b6b421782901e38581fe3a470c9a[m
Merge: b4fb33e 8831490
Author: dementrock <dementrock@users.noreply.github.com>
Date:   Wed Jun 1 09:08:10 2016 -0700

    Merge pull request #12 from tigerneil/patch-1

    update comments

[33mcommit 8831490fc414017972dc2a0e9e8f387bf8331236[m
Author: Xiaohu Zhu <xhzhu.nju@gmail.com>
Date:   Wed Jun 1 21:49:42 2016 +0800

    update comments

    fix comment for max_path_length

[33mcommit b4fb33ede61395e17cf6dad6af3afb610c56ad4d[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Tue May 31 10:57:11 2016 -0700

    fix algorithm id

[33mcommit 02fddac7b5ce72c115d0d0023297528951f2f2c5[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Tue May 24 18:35:11 2016 -0700

    bug fix

[33mcommit bc1b5060e3bba3c70ab67a0cff0f4398ebb09717[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Mon May 23 20:15:07 2016 -0700

    support custom mean / std network in continuous policy

[33mcommit d7aa6945ad5b2c0d3150cb686ce77ad3ce9e5982[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sat May 21 16:24:14 2016 -0700

    update distribution interface to include dimensions

[33mcommit d96594da7468b4001f8ae81c4fc3f40fc91d816d[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sat May 21 10:49:51 2016 -0700

    Fix #7

[33mcommit 5d254f042077679c27a55cacc75ae3c42686e30a[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Mon May 16 11:44:59 2016 -0700

    fix gym environment rendering

[33mcommit b5e1946c9e4e8231398e5982f2d2c01fb74043ad[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Mon May 9 23:12:05 2016 -0700

    fix tests

[33mcommit c0af52cb8de263a23821385b0b975bfff7942c97[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Mon May 9 22:02:03 2016 -0700

    more logging

[33mcommit d52354d3329ba51d8320ca32283fff01235f9a1e[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Mon May 9 22:01:46 2016 -0700

    instrument enhancements

[33mcommit 04aab0aaf84a642f22224ab0c55067aeee5a92c1[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Mon May 9 21:55:56 2016 -0700

    forgot to commit

[33mcommit 4a01baa0ce4469996bb7c38d2cf940a3edd3e047[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Mon May 9 21:46:53 2016 -0700

    fix #3

[33mcommit 782a16a69e40bd90416bff924bbbf9d597f6a718[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sat Apr 30 08:31:38 2016 -0700

    Fix #2

[33mcommit 34743b3e44a92bed86b3d7ab7df9f515466245d2[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sat Apr 30 23:03:46 2016 -0400

    instrument fix

[33mcommit 255901ae00149e0233c6af8f530fcf77b273dd8f[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Apr 28 17:31:33 2016 -0700

    update docs

[33mcommit 031c25686645e252b5a031740a497f3c1cc1d68a[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Thu Apr 28 13:33:19 2016 -0700

    update docs

[33mcommit 9b5c7273efaf9c59c93509c000267a2de27cfa21[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Wed Apr 27 20:23:28 2016 -0700

    fix

[33mcommit afb9c1ac5f9bb34d1175a6582546322442fb0a96[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Wed Apr 27 20:21:31 2016 -0700

    update docs

[33mcommit d6c81ccf497334561a20bd861d75ce5f018537e7[m
Author: dementrock <dementrock@users.noreply.github.com>
Date:   Wed Apr 27 20:18:09 2016 -0700

    Update README.md

[33mcommit 13b192cba348eaf42eac9155cc8a1c14c7245c58[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Wed Apr 27 20:20:24 2016 -0700

    update docs

[33mcommit 8791fa0626744653c89ba8f686bc7a2224d40c7f[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Wed Apr 27 20:18:33 2016 -0700

    update docs

[33mcommit 5d93274bb738903279842317d785849aa4a6ab16[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Wed Apr 27 20:09:16 2016 -0700

    gym updates

[33mcommit 0be7a14357bb232239dd1d2727474b897e2f3095[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Wed Apr 27 14:11:56 2016 -0700

    OpenAI Gym interfaces

[33mcommit 6e544d4c3efa7a7411f9d131d59548b4b93a5e47[m
Merge: af99e45 6fe1478
Author: dementrock <dementrock@users.noreply.github.com>
Date:   Wed Apr 27 00:53:31 2016 -0700

    Merge pull request #1 from coorsbenjamin/master

    Fix OUStrategy to include ou_state when returning action

[33mcommit 6fe14783a7e2a1184c897dcfdd00e17dad27dae8[m
Author: Ben <coorsbenjamin@users.noreply.github.com>
Date:   Wed Apr 27 09:08:06 2016 +0200

    Fix OUStrategy to include ou_state in get_action

[33mcommit af99e45c9cfa4223c71fc8486313bd49e7d7dafc[m
Author: dementrock <dementrock@users.noreply.github.com>
Date:   Sun Apr 24 22:01:37 2016 -0700

    Update README.md

[33mcommit ecf9cb36f139d8749018aa7ab8187d85c12477f6[m
Author: dementrock <dementrock@users.noreply.github.com>
Date:   Sun Apr 24 22:00:56 2016 -0700

    Update README.md

[33mcommit 6cf048fd3693fc9a74b256ea696ddafe05757acd[m
Author: dementrock <dementrock@users.noreply.github.com>
Date:   Sun Apr 24 09:15:56 2016 -0700

    Update README.md

[33mcommit 46d3bb9f5e8c6f3519a09ab4ca43042a0f92b378[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Apr 24 09:15:22 2016 -0700

    update documentation & tutorial inconsistencies

[33mcommit 8a8c259a43efa1cf9677ade39854c6fa406b2df8[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Apr 24 09:02:46 2016 -0700

    add license & badges

[33mcommit e1ee94236b45ee7d24eedf87901e1886cd17abdb[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Apr 24 08:53:14 2016 -0700

    change to lowercase

[33mcommit ea9f801f01dd772577de586be2c1cd40fbc8fb4e[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Apr 24 08:41:55 2016 -0700

    update changelog

[33mcommit 450f0f76210d7da28c738f768a3681b5fe13fa52[m
Author: Rocky Duan <dementrock@gmail.com>
Date:   Sun Apr 24 08:39:26 2016 -0700

    initial import
